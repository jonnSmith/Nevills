var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/components/AddScreen.html",[0,0.13,1,0.62]],["body/components/AddScreen.html",[0,0.21,1,0.842,2,0.247,3,0.247,4,0.687,5,0.687,6,0.687,7,0.122,8,1.421,9,1.201,10,1.67,11,0.604,12,1.805,13,3.141,14,1.055,15,2.704,16,0.379,17,0.617,18,1.514,19,3.689,20,1.462,21,2.505,22,0.826,23,0.71,24,3.689,25,2.975,26,3.689,27,2.505,28,1.873,29,2.18,30,3.689,31,2.975,32,0.463,33,0.895,34,0.86,35,2.7,36,1.548,37,1.439,38,1.67,39,0.842,40,1.67,41,1.873,42,2.02,43,2.153,44,2.451,45,1.92,46,2.153,47,3.387,48,3.526,49,1.112,50,2.704,51,0.531,52,0.052,53,0.782,54,0.458,55,1.762,56,1.148,57,2.704,58,1.462,59,0.928,60,1.499,61,1.762,62,2.009,63,2.756,64,3.309,65,2.975,66,2.975,67,1.762,68,2.505,69,1.127,70,2.975,71,2.702,72,1.762,73,1.836,74,1.762,75,2.18,76,2.153,77,1.762,78,2.18,79,0.71,80,0.71,81,1.762,82,1.373,83,1.373,84,1.866,85,1.836,86,2.233,87,1.762,88,2.18,89,2.02,90,1.836,91,1.578,92,2.18,93,1.201,94,2.975,95,0.864,96,1.762,97,2.975,98,1.762,99,0.928,100,0.295,101,0.53,102,0.53,103,1.196,104,1.421,105,1.196,106,0.617,107,0.53,108,1.029,109,0.783,110,0.463,111,1.029,112,1.421,113,0.783,114,0.783,115,0.203,116,0.346,117,0.783,118,1.196,119,1.196,120,0.604,121,1.762,122,1.196,123,1.196,124,1.421,125,1.421,126,2.704,127,0.783,128,1.196,129,1.421,130,0.783,131,1.029,132,1.762,133,1.029,134,2.153,135,1.762,136,1.421,137,0.927,138,2.975,139,1.462,140,2.704,141,2.18,142,1.762,143,1.762,144,1.762,145,1.762,146,1.421,147,1.196,148,1.762,149,1.762,150,0.969,151,2.704,152,1.762,153,0.783,154,1.421,155,1.196,156,1.421,157,1.762,158,1.421,159,1.421,160,0.463,161,1.762,162,1.762,163,1.762,164,0.813,165,2.653,166,1.762,167,1.029,168,0.783,169,1.421,170,1.029,171,1.196,172,0.895,173,2.704,174,1.196,175,0.895,176,1.196,177,0.783,178,1.201,179,1.029,180,1.201,181,1.201,182,0.783,183,1.029,184,1.196,185,1.196,186,1.196,187,0.687,188,1.029,189,0.783,190,0.463,191,1.421,192,1.029,193,0.687,194,0.687,195,1.762,196,1.762,197,1.836,198,1.762,199,2.18,200,1.762,201,1.029,202,1.762,203,1.762,204,2.704,205,2.18,206,2.18,207,2.18,208,0.53,209,1.055,210,1.055,211,1.055,212,1.439,213,0.687,214,0.687,215,0.402,216,0.687,217,0.402,218,0.687,219,0.402,220,0.687,221,0.687,222,0.402,223,0.687,224,0.402,225,0.402,226,0.687,227,0.025,228,0.025]],["title/modules/AppModule.html",[229,1.379,230,1.586]],["body/modules/AppModule.html",[1,1.149,2,0.367,3,0.367,7,0.285,34,0.948,35,2.104,36,0.786,39,1.101,48,2.907,52,0.051,59,0.514,69,0.896,99,1.095,100,0.438,101,1.084,102,0.786,103,1.775,106,1.128,107,0.786,108,1.526,109,1.162,110,0.687,115,0.475,116,0.514,182,1.602,208,0.786,215,1.149,217,1.149,219,1.149,222,1.149,224,1.149,225,1.149,227,0.033,228,0.033,229,1.83,230,3.261,231,1.526,232,3.328,233,3.328,234,3.763,235,2.108,236,2.108,237,2.108,238,2.108,239,2.449,240,3.987,241,2.449,242,1.882,243,2.144,244,2.907,245,2.108,246,2.108,247,1.775,248,3.605,249,3.605,250,3.605,251,3.605,252,2.108,253,1.775,254,2.614,255,3.605,256,2.614,257,2.108,258,3.605,259,4.448,260,2.614,261,3.605,262,1.775,263,1.775,264,2.614,265,3.605,266,2.614,267,2.108,268,2.447,269,1.775,270,1.775,271,2.447,272,1.775,273,1.162,274,1.775,275,2.447,276,1.775,277,2.447,278,1.775,279,2.614,280,2.614,281,2.614,282,2.614,283,2.614,284,2.614,285,2.108,286,2.108,287,2.614,288,2.108,289,2.614,290,1.327,291,0.896,292,2.108,293,2.614,294,2.614,295,2.614,296,2.614,297,2.614,298,1.775,299,2.614,300,2.614,301,2.614,302,2.614]],["title/components/CalendarScreen.html",[0,0.13,215,0.62]],["body/components/CalendarScreen.html",[0,0.236,1,0.58,2,0.357,3,0.357,4,0.992,5,0.992,6,0.992,7,0.176,9,1.572,10,2.064,11,0.871,12,1.982,14,1.38,16,0.293,17,0.807,18,1.438,22,0.94,23,0.929,28,2.232,32,0.668,33,1.291,34,0.965,36,1.222,37,1.715,38,2.064,39,1.003,49,1.12,51,0.695,52,0.052,53,0.908,54,0.532,56,1.289,59,0.799,60,1.394,80,0.929,99,1.012,100,0.426,101,0.764,102,0.764,106,0.58,107,0.764,109,1.13,110,0.668,114,1.13,115,0.293,116,0.5,120,0.871,127,1.13,150,0.929,153,1.13,158,2.051,159,2.051,160,0.668,189,1.572,190,0.929,192,2.064,208,0.764,209,1.38,210,1.38,211,1.38,212,1.715,213,0.992,214,0.992,215,1.003,216,0.992,217,0.807,218,0.992,219,0.58,220,0.992,221,0.992,222,0.58,223,0.992,224,0.58,225,0.58,226,0.992,227,0.032,228,0.032,262,1.726,263,2.401,290,2.064,303,2.051,304,2.374,305,4.066,306,3.537,307,2.566,308,4.396,309,4.396,310,3.537,311,2.566,312,2.761,313,2.984,314,3.537,315,3.537,316,1.389,317,2.543,318,2.852,319,2.401,320,1.807,321,2.543,322,2.543,323,2.984,324,1.795,325,2.566,326,0.871,327,2.543,328,4.396,329,2.051,330,3.537,331,2.543,332,2.051,333,3.537,334,1.484,335,2.051,336,1.795,337,2.051,338,2.543,339,2.543,340,1.13,341,2.543,342,2.543,343,2.543,344,1.726,345,2.051,346,2.543,347,2.543,348,2.543,349,1.726,350,2.051,351,1.484,352,3.537,353,2.543,354,2.543,355,2.543,356,1.484,357,2.051,358,2.051,359,1.484,360,1.484,361,1.484]],["title/components/EventScreen.html",[0,0.13,217,0.62]],["body/components/EventScreen.html",[0,0.192,1,0.317,2,0.498,3,0.195,4,0.542,5,0.542,6,0.542,7,0.096,9,0.996,10,1.431,11,0.476,12,1.674,13,1.914,14,0.875,16,0.408,17,0.512,18,1.483,20,1.906,21,2.196,22,0.817,23,0.589,25,2.609,28,1.642,29,1.808,31,2.609,32,0.365,34,0.817,35,2.504,36,1.548,37,1.262,38,1.431,39,0.738,40,1.431,41,1.642,42,1.138,43,1.888,45,1.645,46,1.888,47,3.06,49,1.126,51,0.636,52,0.052,53,0.785,54,0.494,56,1.332,58,1.686,59,0.917,60,1.51,62,1.967,63,2.679,64,2.913,65,3.06,66,3.22,68,1.522,69,0.768,71,1.914,73,0.943,75,1.808,76,2.425,78,1.808,79,0.85,80,0.997,82,1.138,83,1.138,84,1.846,85,1.522,86,1.914,88,1.808,89,1.802,90,1.522,91,2.215,92,1.808,93,0.996,94,2.609,95,0.74,97,2.609,99,0.866,100,0.233,101,0.418,102,0.418,104,1.12,105,0.943,106,0.512,107,0.418,108,0.811,109,0.617,110,0.365,111,0.811,112,1.12,113,0.617,114,0.617,115,0.16,116,0.273,117,0.617,118,0.943,119,0.943,120,0.476,122,0.943,123,0.943,124,1.12,125,1.12,127,1.686,128,0.943,129,1.12,130,0.617,131,0.811,133,0.811,134,2.33,136,1.12,137,0.966,138,2.609,139,1.577,146,1.12,150,1.127,153,1.686,154,1.12,155,0.943,156,1.12,160,0.589,164,0.972,168,0.996,169,1.12,170,1.309,171,1.522,172,1.138,174,1.914,175,1.138,176,1.522,177,0.996,178,1.437,179,1.309,180,1.437,181,1.437,182,0.996,183,1.309,184,1.522,185,1.522,186,1.522,188,1.309,189,0.996,190,1.127,193,0.875,194,0.875,197,1.522,201,1.309,205,1.808,206,1.808,207,1.808,208,0.418,209,0.875,210,0.875,211,0.875,212,1.262,213,0.542,214,0.542,215,0.317,216,0.542,217,0.738,218,0.542,219,0.317,220,0.542,221,0.542,222,0.317,223,0.542,224,0.317,225,0.317,226,0.542,227,0.02,228,0.02,273,0.996,304,1.645,307,1.888,311,1.888,312,1.914,313,2.196,316,0.972,319,1.522,320,1.437,324,1.138,325,1.888,326,0.768,334,0.811,336,1.138,337,1.808,340,0.996,344,0.943,349,0.943,350,1.12,351,1.309,356,0.811,359,0.811,360,0.811,361,0.811,362,1.12,363,2.242,364,3.351,365,3.235,366,2.609,367,3.235,368,3.235,369,3.235,370,2.242,371,2.242,372,0.943,373,3.235,374,2.242,375,1.389,376,1.389,377,1.389,378,1.389,379,2.072,380,1.389,381,1.389,382,1.389,383,1.389,384,2.242,385,2.027,386,1.389,387,1.138,388,2.242,389,2.242,390,1.389,391,2.242,392,2.242,393,1.309,394,1.389,395,1.389,396,1.309,397,1.389,398,1.389,399,1.389,400,1.389,401,1.389,402,1.808,403,1.389,404,1.914,405,1.389,406,1.389,407,1.389,408,1.12,409,1.389,410,2.242,411,1.389,412,1.389,413,1.389,414,1.389,415,1.389,416,1.389,417,1.389,418,1.389,419,1.389,420,1.389,421,1.389,422,1.389,423,1.389,424,1.389,425,1.389,426,2.819,427,1.389,428,1.389,429,1.389,430,2.242,431,1.389,432,1.389,433,1.12,434,1.808,435,1.389,436,2.242,437,1.389,438,1.389,439,1.389,440,2.242,441,1.389,442,1.389,443,2.242,444,2.242,445,2.242,446,2.242,447,2.242]],["title/injectables/EventsService.html",[39,0.62,448,0.931]],["body/injectables/EventsService.html",[0,0.07,2,0.205,3,0.205,7,0.331,16,0.168,17,0.533,18,0.703,20,1.94,22,0.716,23,0.614,32,0.384,33,0.743,34,0.764,39,0.533,44,0.854,49,1.043,51,0.716,52,0.052,53,0.716,54,0.487,56,1.448,59,1,62,0.571,69,1.678,70,1.885,79,0.767,80,1.176,83,1.187,84,0.65,90,0.994,91,2.268,93,1.039,95,0.957,99,0.716,100,0.245,106,0.666,110,0.384,114,0.65,115,0.168,116,0.288,120,0.502,127,1.812,139,0.65,150,0.614,153,1.812,155,2.263,160,1.02,164,0.44,165,3.133,187,1.516,188,2.759,189,1.812,190,0.875,191,1.885,193,1.652,194,1.3,199,3.754,227,0.021,228,0.021,241,1.692,274,0.994,291,0.801,316,1.498,320,2.154,324,1.972,326,1,340,2.032,349,1.982,351,2.717,358,1.18,364,1.18,379,2.613,387,1.482,404,2.875,448,1,449,1.18,450,1.619,451,3.333,452,3.333,453,1.982,454,3.333,455,2.338,456,2.338,457,2.338,458,1.982,459,2.338,460,1.463,461,1.463,462,2.338,463,1.463,464,2.919,465,2.338,466,3.521,467,1.463,468,3.333,469,3.325,470,2.938,471,2.354,472,2.919,473,2.338,474,1.463,475,1.812,476,2.338,477,1.463,478,2.338,479,2.338,480,3.333,481,1.463,482,3.333,483,2.338,484,2.919,485,2.338,486,1.587,487,1.463,488,3.687,489,1.463,490,1.18,491,1.587,492,3.754,493,2.338,494,2.338,495,1.463,496,1.463,497,1.463,498,1.463,499,1.463,500,1.463,501,1.463,502,2.338,503,1.463,504,1.463,505,1.463,506,1.463,507,1.463,508,1.463,509,2.688,510,1.463,511,1.463,512,1.463,513,1.463,514,1.463,515,1.463,516,1.463,517,1.463,518,4.572,519,4.477,520,2.338,521,3.333,522,1.463,523,1.463,524,1.463,525,2.338,526,2.338,527,1.463,528,1.463,529,2.338,530,2.338,531,2.354,532,1.885,533,3.333,534,2.338,535,3.333,536,1.463,537,1.463,538,3.333,539,3.333,540,1.463,541,2.354,542,1.463,543,2.919,544,2.919,545,3.885,546,2.919,547,2.919,548,2.919,549,3.333,550,2.919,551,1.463,552,1.463,553,1.463,554,2.919,555,1.18,556,1.463,557,1.463,558,1.463,559,1.463,560,1.463,561,1.463,562,1.463,563,1.463,564,1.463]],["title/components/HeaderComponent.html",[0,0.13,219,0.62]],["body/components/HeaderComponent.html",[0,0.243,1,0.652,2,0.401,3,0.401,4,1.115,5,1.115,6,1.115,7,0.197,11,0.979,12,2.032,13,1.94,14,1.494,16,0.329,18,1.298,22,0.562,23,1.006,32,1.006,33,1.451,34,0.995,36,1.521,37,1.801,49,0.986,51,0.562,52,0.052,53,0.907,54,0.441,58,1.27,59,0.562,60,0.979,68,2.6,80,0.751,95,1.006,99,0.907,100,0.478,101,0.859,102,0.859,106,0.652,107,0.859,110,0.751,115,0.329,116,0.562,137,1.734,150,1.006,167,2.809,168,1.27,170,2.236,177,2.285,178,1.702,179,1.668,180,1.702,181,1.702,189,1.92,208,0.859,209,1.494,210,1.494,211,1.494,212,1.801,213,1.115,214,1.115,215,0.652,216,1.115,217,0.652,218,1.115,219,1.053,220,1.801,221,1.115,222,0.652,223,1.115,224,0.652,225,0.652,226,1.115,227,0.035,228,0.035,319,2.6,336,1.451,351,1.668,387,1.451,565,2.304,566,3.83,567,4.615,568,4.615,569,4.32,570,4.615,571,3.83,572,2.857,573,3.83,574,3.089,575,4.615,576,1.94,577,2.857,578,2.857,579,2.857,580,2.857,581,2.857,582,3.089,583,2.857,584,2.857,585,3.83,586,2.857,587,2.857,588,2.857,589,2.857,590,2.857,591,2.857,592,2.857,593,2.857,594,2.857]],["title/components/ListScreen.html",[0,0.13,222,0.62]],["body/components/ListScreen.html",[0,0.224,1,0.444,2,0.273,3,0.273,4,0.76,5,0.76,6,0.76,7,0.135,9,1.296,10,1.775,11,0.667,12,1.856,14,1.138,16,0.224,17,0.666,18,1.498,20,2.114,21,2.636,22,0.763,23,0.766,27,2.636,28,1.775,32,0.511,34,0.915,36,1.051,37,1.515,38,1.775,39,0.886,40,1.775,41,1.971,42,1.481,43,2.266,44,1.137,45,2.041,46,2.266,49,1.123,51,0.763,52,0.052,53,0.89,54,0.521,56,1.393,58,1.554,59,0.89,60,1.425,62,1.515,69,1.198,79,0.766,80,0.918,89,1.481,95,1.189,99,0.915,100,0.326,101,0.585,102,0.585,106,0.444,107,0.585,109,0.865,110,0.511,114,0.865,115,0.224,116,0.383,117,0.865,118,1.322,119,1.322,120,0.667,122,1.322,123,1.322,127,1.554,130,0.865,131,1.137,133,1.137,134,2.041,137,0.667,150,0.918,153,1.296,160,0.918,164,1.051,168,0.865,170,1.137,171,1.322,172,0.989,174,1.322,175,0.989,176,1.322,177,0.865,178,1.296,179,1.137,180,1.296,181,1.296,182,1.296,183,1.137,184,1.322,185,1.322,186,1.322,187,0.76,188,1.137,189,0.865,190,0.511,192,2.041,193,0.76,194,0.76,197,1.322,201,1.137,208,0.585,209,1.138,210,1.138,211,1.138,212,1.515,213,0.76,214,0.76,215,0.444,216,0.76,217,0.666,218,0.76,219,0.444,220,0.76,221,0.76,222,0.886,223,0.76,224,0.444,225,0.444,226,0.76,227,0.027,228,0.027,273,1.725,304,2.041,307,2.266,311,2.266,312,2.374,313,2.636,316,1.541,318,1.57,320,2.153,323,1.322,325,2.266,326,1.198,334,1.137,335,1.57,336,1.481,340,1.94,356,1.137,357,2.352,359,1.137,360,1.137,361,1.137,366,2.352,372,1.322,379,2.427,402,1.57,404,1.98,433,1.57,434,2.352,450,1.296,453,2.374,475,1.94,491,1.322,532,2.352,576,1.98,595,1.57,596,2.917,597,2.917,598,2.917,599,2.917,600,1.947,601,1.947,602,1.947,603,2.917,604,1.947,605,2.917,606,1.947,607,2.352,608,2.917,609,4.158,610,1.947,611,1.322,612,2.82,613,2.82,614,1.947,615,1.947,616,1.947,617,1.947,618,1.481,619,1.947,620,1.947,621,1.947,622,1.947,623,2.917,624,1.947,625,1.947,626,2.917,627,1.947,628,1.947,629,1.947,630,1.947,631,2.917,632,2.917,633,2.917]],["title/components/NevillsApp.html",[0,0.13,224,0.62]],["body/components/NevillsApp.html",[0,0.247,1,0.803,2,0.494,3,0.494,4,1.372,5,1.372,6,1.372,7,0.243,11,1.206,12,2.073,14,1.709,16,0.405,17,1,22,0.692,32,0.924,42,1.786,49,1,51,0.692,52,0.051,53,0.982,54,0.504,99,0.938,100,0.589,115,0.405,116,0.692,120,1.206,139,1.947,160,0.924,208,1.057,209,1.709,210,1.709,211,1.709,212,1.948,213,1.372,214,1.372,215,0.803,216,1.372,217,0.803,218,1.372,219,0.803,220,1.372,221,1.372,222,0.803,223,1.372,224,1.14,225,1.14,226,1.372,227,0.04,228,0.04,243,2.219,285,2.837,286,2.837,291,1.206,326,1.206,450,1.563,634,2.837,635,4.381,636,4.994,637,3.518,638,4.381,639,3.518,640,2.837,641,2.837,642,3.518]],["title/pipes/OutdatedPipe.html",[239,1.379,618,1.379]],["body/pipes/OutdatedPipe.html",[2,0.536,3,0.536,7,0.264,9,1.697,11,1.309,22,0.751,23,1.003,49,0.871,51,0.751,52,0.051,53,0.973,54,0.439,59,0.906,76,2.689,95,1.381,99,0.751,100,0.639,115,0.439,116,0.751,130,2.283,160,1.003,164,1.385,227,0.042,228,0.042,239,2.339,475,2.047,618,2.512,643,3.08,644,3.819,645,4.607,646,4.948,647,3.819,648,4.607,649,4.607,650,4.607,651,2.229,652,4.607,653,3.819,654,3.819]],["title/injectables/PushService.html",[242,1.06,448,0.931]],["body/injectables/PushService.html",[2,0.399,3,0.399,7,0.196,16,0.327,17,0.871,18,0.854,20,2.198,22,0.559,23,1.002,32,0.746,33,1.443,34,0.972,49,1.129,51,0.559,52,0.052,53,0.559,54,0.439,59,0.972,60,1.308,69,1.578,79,0.746,93,2.046,99,0.847,100,0.476,106,0.648,110,0.746,115,0.327,116,0.559,117,1.696,120,0.974,160,0.746,187,2.051,190,1.209,193,1.109,194,1.489,227,0.035,228,0.035,242,1.489,275,3.532,276,1.929,291,1.308,324,2.511,326,0.974,340,1.696,387,2.338,448,1.476,450,1.696,466,2.292,470,3.077,471,3.077,486,2.591,488,3.989,491,2.925,492,3.077,509,3.077,655,2.292,656,4.142,657,4.605,658,4.605,659,4.804,660,4.605,661,3.816,662,2.842,663,3.816,664,3.816,665,4.946,666,4.804,667,3.474,668,2.842,669,2.842,670,3.077,671,2.887,672,2.842,673,2.292,674,2.292,675,3.077,676,3.816,677,2.842,678,2.842,679,2.842,680,2.842,681,2.842,682,2.842,683,2.842,684,2.842,685,2.842,686,2.842]],["title/injectables/StartupService.html",[243,1.207,448,0.931]],["body/injectables/StartupService.html",[0,0.168,2,0.35,3,0.35,7,0.172,16,0.287,17,0.796,18,1.54,20,2.112,22,0.49,23,0.916,32,0.655,34,0.995,36,1.429,37,1.7,39,0.994,40,2.043,41,2.213,42,2.329,43,2.544,49,0.994,51,0.49,52,0.052,53,0.49,54,0.287,56,1.145,58,1.55,59,0.959,60,1.196,79,0.655,80,0.655,93,1.55,95,0.655,99,1.018,100,0.417,101,0.749,102,0.749,106,0.994,107,1.209,110,0.655,114,1.108,115,0.287,116,0.49,120,0.855,137,0.855,150,0.916,168,1.108,172,1.266,175,1.266,177,1.108,178,1.108,180,1.108,181,1.108,182,2.038,183,1.455,187,1.57,190,0.916,193,1.7,194,1.361,201,1.455,227,0.032,228,0.032,241,2.213,242,1.7,243,1.55,268,3.313,269,1.693,270,1.693,271,3.313,272,1.693,273,1.108,277,3.313,278,1.693,290,1.266,316,0.749,324,2.213,372,1.693,387,2.213,408,2.011,448,1.379,450,1.55,458,2.732,469,1.693,486,2.369,490,2.011,555,2.813,576,1.693,582,2.813,640,2.813,641,2.813,656,2.011,670,2.011,671,2.036,673,3.699,675,2.011,687,2.011,688,4.358,689,4.88,690,3.489,691,2.493,692,3.489,693,3.489,694,2.813,695,4.024,696,3.489,697,2.493,698,3.489,699,2.493,700,2.493,701,2.493,702,2.493,703,2.493,704,2.493,705,2.493,706,0.973,707,2.493,708,2.493,709,2.493,710,2.493,711,3.489,712,2.493,713,2.493,714,2.493,715,2.493,716,2.493,717,2.493,718,2.493,719,2.493,720,2.493,721,2.493,722,2.493,723,2.493,724,2.493,725,2.493,726,2.493,727,2.493,728,2.493,729,3.489,730,2.493,731,2.493,732,2.493,733,2.493,734,2.493,735,2.493,736,2.493,737,2.493,738,2.493,739,2.493]],["title/components/TabsPage.html",[0,0.13,225,0.62]],["body/components/TabsPage.html",[0,0.227,1,0.907,2,0.287,3,0.287,4,0.797,5,0.797,6,0.797,7,0.141,9,1.343,10,1.826,11,0.7,12,1.793,14,1.179,16,0.235,17,0.689,18,1.513,22,0.594,23,0.794,27,2.699,28,2.018,32,0.794,34,0.903,36,1.081,37,1.551,38,1.826,39,0.907,40,1.534,41,2.018,44,2.593,45,2.099,46,2.32,49,1.148,51,0.594,52,0.052,53,0.834,54,0.488,56,1.306,58,1.974,59,0.873,60,1.233,62,0.797,69,0.7,76,1.764,80,0.536,95,1.044,99,0.964,100,0.342,101,0.614,102,0.614,106,0.466,107,0.614,109,0.908,110,0.536,115,0.235,116,0.401,127,1.598,130,1.885,131,1.192,133,1.192,134,2.099,137,0.7,147,2.052,150,0.945,153,0.908,160,1.114,164,0.908,168,0.908,172,1.037,175,1.037,177,0.908,178,1.343,180,1.343,181,1.343,187,1.88,190,0.536,192,2.593,193,0.797,194,0.797,208,0.614,209,1.179,210,1.179,211,1.179,212,1.551,213,0.797,214,0.797,215,0.907,216,0.797,217,0.466,218,0.797,219,0.466,220,0.797,221,0.797,222,0.907,223,0.797,224,0.466,225,0.907,226,0.797,227,0.028,228,0.028,242,1.551,273,0.908,288,1.647,290,1.037,291,1.233,304,2.099,307,2.32,311,2.32,323,2.052,325,2.32,326,1.454,329,1.647,332,1.647,334,1.192,336,2.018,344,1.387,345,1.647,356,1.192,359,1.192,360,1.192,361,1.192,453,2.442,475,1.598,531,2.9,541,1.647,574,1.647,611,2.052,613,1.647,651,1.764,674,1.647,694,2.9,740,1.647,741,3.022,742,3.975,743,3.975,744,3.975,745,3.975,746,3.975,747,3.022,748,2.042,749,3.022,750,3.022,751,2.042,752,4.242,753,2.042,754,3.975,755,3.975,756,2.042,757,2.042,758,3.597,759,3.597,760,2.042,761,2.042,762,2.042,763,2.042,764,2.042,765,3.022,766,2.042,767,2.042,768,2.042,769,2.042,770,2.042,771,3.597,772,2.042,773,3.597,774,2.042,775,2.042,776,3.022,777,2.042,778,2.042,779,2.042,780,2.042,781,2.042,782,2.042,783,3.975,784,2.042,785,2.042,786,2.042,787,2.042,788,2.042,789,2.042,790,2.042,791,2.042,792,2.042,793,2.042,794,2.042]],["title/coverage.html",[795,2.985]],["body/coverage.html",[0,0.254,1,0.788,7,0.239,8,2.785,34,0.679,39,0.788,52,0.051,54,0.397,69,1.183,111,2.015,113,1.534,215,0.788,217,0.788,219,0.788,222,0.788,224,0.788,225,0.788,227,0.04,228,0.04,239,1.753,241,1.753,242,1.347,243,1.534,247,2.344,291,1.484,298,2.344,303,2.785,316,1.038,362,2.785,385,1.753,393,2.762,448,1.751,449,2.785,565,2.785,595,2.785,611,3.592,618,1.753,634,2.785,643,2.785,655,2.785,687,2.785,706,1.689,740,2.785,795,2.785,796,3.453,797,3.453,798,3.453,799,4.33,800,4.33,801,4.33,802,4.731,803,3.453,804,3.453,805,2.785,806,3.453,807,2.762,808,3.453,809,4.961,810,2.785,811,2.785,812,3.453,813,3.453,814,3.453,815,3.453,816,3.453,817,3.453,818,3.453,819,3.453,820,3.453,821,3.453,822,3.492,823,3.453,824,3.453,825,2.785,826,3.453,827,3.453,828,3.453,829,3.453,830,2.785,831,3.453,832,3.453]],["title/dependencies.html",[231,1.906,833,2.272]],["body/dependencies.html",[7,0.224,35,1.894,52,0.052,82,1.648,93,1.442,100,0.543,101,1.251,102,0.976,103,2.204,105,2.204,106,1.236,107,0.976,108,1.894,182,1.442,187,1.266,227,0.038,228,0.038,231,1.894,252,3.358,253,2.827,257,2.617,262,2.204,263,2.827,267,2.617,268,2.204,269,2.204,270,2.204,271,2.204,272,2.204,273,1.442,274,2.204,275,2.204,276,2.204,277,2.204,278,2.204,450,1.442,667,4.34,834,3.246,835,5.338,836,4.164,837,3.246,838,3.246,839,5.285,840,3.246,841,3.246,842,3.246,843,3.246,844,3.246,845,3.246,846,3.246,847,5.417,848,3.246,849,3.246,850,3.246,851,3.246,852,3.246,853,3.246,854,3.246,855,3.246,856,3.246,857,3.246,858,3.246,859,3.246,860,3.246,861,2.617,862,3.246,863,3.246,864,3.246,865,3.246,866,3.246,867,3.246,868,3.246,869,3.246,870,3.246,871,3.246,872,3.246,873,3.246,874,3.246,875,3.246,876,3.246,877,3.246]],["title/miscellaneous/functions.html",[291,1.119,878,1.326]],["body/miscellaneous/functions.html",[7,0.278,16,0.463,22,0.934,36,1.208,51,0.934,52,0.048,53,0.934,56,1.328,64,3.226,71,3.226,79,1.056,84,1.787,85,2.73,86,2.73,91,2.347,111,2.773,128,2.73,130,1.787,141,3.831,167,2.347,227,0.043,228,0.043,247,2.73,290,2.041,291,1.378,292,3.242,298,3.226,458,2.73,607,3.242,830,3.242,878,2.347,879,4.02,880,4.02,881,4.02,882,4.02,883,4.02]],["title/interfaces/iEvent.html",[316,0.817,706,1.06]],["body/interfaces/iEvent.html",[2,0.481,3,0.481,7,0.237,16,0.395,17,0.984,52,0.051,54,0.625,56,0.901,62,1.99,63,2.002,79,1.367,80,1.239,82,1.741,83,1.741,84,2.199,89,2.512,95,1.488,113,1.524,115,0.543,117,1.524,137,1.696,139,2.199,150,0.901,164,1.296,190,0.901,227,0.039,228,0.039,316,1.296,320,2.199,385,1.741,396,2.002,475,2.199,651,2.002,671,2.889,706,1.84,807,2.002,884,3.991,885,2.766]],["title/interfaces/iTodo.html",[385,1.379,706,1.06]],["body/interfaces/iTodo.html",[2,0.531,3,0.531,7,0.261,16,0.435,17,1.045,52,0.051,54,0.527,56,0.994,62,1.787,63,2.208,79,1.4,80,0.994,82,1.921,83,1.921,84,1.681,89,1.921,95,1.46,113,1.681,115,0.567,117,1.681,137,1.297,139,1.681,150,0.994,164,1.577,190,0.994,227,0.042,228,0.042,316,1.137,320,1.681,385,2.326,396,2.208,475,1.681,651,2.876,671,2.208,706,1.923,807,2.208,884,3.051,885,3.051]],["title/index.html",[16,0.313,886,2.191]],["body/index.html",[0,0.171,1,1.094,34,0.942,39,1.094,52,0.051,115,0.409,208,1.068,215,1.094,217,1.094,219,1.094,222,1.094,224,1.094,225,1.094,227,0.04,228,0.04,229,2.239,230,3.317,231,2.075,232,2.866,233,2.866,234,2.866,235,2.866,236,2.866,237,2.866,238,2.866,239,2.434,240,4.042,241,2.434,242,1.87,243,2.13,244,3.556,245,2.866,246,2.866,448,1.218,612,3.556,618,1.804,706,1.387,805,2.866,886,2.866,887,3.554,888,3.554]],["title/modules.html",[229,1.879]],["body/modules.html",[52,0.045,227,0.045,228,0.045,229,2.21,230,2.541,253,2.955,861,3.51,889,4.353,890,4.353]],["title/miscellaneous/variables.html",[393,1.906,878,1.326]],["body/miscellaneous/variables.html",[16,0.432,52,0.052,54,0.525,59,0.738,73,2.55,79,0.986,113,2.183,147,2.55,160,1.375,164,1.129,167,2.982,227,0.042,228,0.042,326,1.683,340,2.27,379,2.192,393,2.192,396,2.192,469,3.335,807,2.192,810,3.029,811,3.961,822,3.029,825,3.961,878,2.192,891,3.756,892,3.756,893,3.756,894,3.756,895,4.912,896,3.756,897,3.756]]],"invertedIndex":[["",{"_index":52,"title":{},"body":{"components/AddScreen.html":{},"modules/AppModule.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"injectables/EventsService.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"components/NevillsApp.html":{},"pipes/OutdatedPipe.html":{},"injectables/PushService.html":{},"injectables/StartupService.html":{},"components/TabsPage.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"interfaces/iEvent.html":{},"interfaces/iTodo.html":{},"index.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":611,"title":{},"body":{"components/ListScreen.html":{},"components/TabsPage.html":{},"coverage.html":{}}}],["0.5",{"_index":507,"title":{},"body":{"injectables/EventsService.html":{}}}],["0.8.26",{"_index":877,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":809,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":808,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":799,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":612,"title":{},"body":{"components/ListScreen.html":{},"index.html":{}}}],["1.0.20",{"_index":843,"title":{},"body":{"dependencies.html":{}}}],["1.1.19",{"_index":856,"title":{},"body":{"dependencies.html":{}}}],["1.2.1",{"_index":863,"title":{},"body":{"dependencies.html":{}}}],["1.3.3",{"_index":860,"title":{},"body":{"dependencies.html":{}}}],["1.6.1",{"_index":868,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":801,"title":{},"body":{"coverage.html":{}}}],["1/14",{"_index":806,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":803,"title":{},"body":{"coverage.html":{}}}],["10/19",{"_index":816,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":800,"title":{},"body":{"coverage.html":{}}}],["13/18",{"_index":824,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":888,"title":{},"body":{"index.html":{}}}],["2.0.0",{"_index":846,"title":{},"body":{"dependencies.html":{}}}],["2.0.2",{"_index":852,"title":{},"body":{"dependencies.html":{}}}],["2.0.5",{"_index":854,"title":{},"body":{"dependencies.html":{}}}],["2.1.3",{"_index":844,"title":{},"body":{"dependencies.html":{}}}],["2.2.3",{"_index":870,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":850,"title":{},"body":{"dependencies.html":{}}}],["2.4.2",{"_index":858,"title":{},"body":{"dependencies.html":{}}}],["2/8",{"_index":814,"title":{},"body":{"coverage.html":{}}}],["23",{"_index":818,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":802,"title":{},"body":{"coverage.html":{}}}],["3.0.0",{"_index":867,"title":{},"body":{"dependencies.html":{}}}],["3.6.0",{"_index":875,"title":{},"body":{"dependencies.html":{}}}],["3.6.1",{"_index":864,"title":{},"body":{"dependencies.html":{}}}],["3.9.2",{"_index":865,"title":{},"body":{"dependencies.html":{}}}],["3/12",{"_index":817,"title":{},"body":{"coverage.html":{}}}],["3/13",{"_index":819,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":829,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":497,"title":{},"body":{"injectables/EventsService.html":{}}}],["4.0.3",{"_index":851,"title":{},"body":{"dependencies.html":{}}}],["4.9.2",{"_index":839,"title":{},"body":{"dependencies.html":{}}}],["4/7",{"_index":827,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":887,"title":{},"body":{"index.html":{}}}],["5.0.2",{"_index":857,"title":{},"body":{"dependencies.html":{}}}],["5.2.11",{"_index":835,"title":{},"body":{"dependencies.html":{}}}],["5.5.11",{"_index":872,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":820,"title":{},"body":{"coverage.html":{}}}],["52",{"_index":815,"title":{},"body":{"coverage.html":{}}}],["53",{"_index":812,"title":{},"body":{"coverage.html":{}}}],["57",{"_index":826,"title":{},"body":{"coverage.html":{}}}],["6.0.1",{"_index":853,"title":{},"body":{"dependencies.html":{}}}],["6.3.0",{"_index":849,"title":{},"body":{"dependencies.html":{}}}],["6/12",{"_index":821,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":828,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":805,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["7/13",{"_index":813,"title":{},"body":{"coverage.html":{}}}],["72",{"_index":823,"title":{},"body":{"coverage.html":{}}}],["9.1.1",{"_index":845,"title":{},"body":{"dependencies.html":{}}}],["9000",{"_index":503,"title":{},"body":{"injectables/EventsService.html":{}}}],["_",{"_index":541,"title":{},"body":{"injectables/EventsService.html":{},"components/TabsPage.html":{}}}],["_subscript",{"_index":307,"title":{},"body":{"components/CalendarScreen.html":{},"components/EventScreen.html":{},"components/ListScreen.html":{},"components/TabsPage.html":{}}}],["actionsheet",{"_index":591,"title":{},"body":{"components/HeaderComponent.html":{}}}],["actionsheet.pres",{"_index":594,"title":{},"body":{"components/HeaderComponent.html":{}}}],["actionsheetcontrol",{"_index":570,"title":{},"body":{"components/HeaderComponent.html":{}}}],["actionsheetctrl",{"_index":569,"title":{},"body":{"components/HeaderComponent.html":{}}}],["activ",{"_index":754,"title":{},"body":{"components/TabsPage.html":{}}}],["activeev",{"_index":742,"title":{},"body":{"components/TabsPage.html":{}}}],["actual",{"_index":775,"title":{},"body":{"components/TabsPage.html":{}}}],["actual_compon",{"_index":226,"title":{},"body":{"components/AddScreen.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"components/NevillsApp.html":{},"components/TabsPage.html":{}}}],["ad",{"_index":129,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{}}}],["add",{"_index":13,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"components/HeaderComponent.html":{}}}],["add'},{'nam",{"_index":214,"title":{},"body":{"components/AddScreen.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"components/NevillsApp.html":{},"components/TabsPage.html":{}}}],["add.html",{"_index":15,"title":{},"body":{"components/AddScreen.html":{}}}],["add/add",{"_index":767,"title":{},"body":{"components/TabsPage.html":{}}}],["addev",{"_index":24,"title":{},"body":{"components/AddScreen.html":{}}}],["addeventform",{"_index":19,"title":{},"body":{"components/AddScreen.html":{}}}],["addit",{"_index":777,"title":{},"body":{"components/TabsPage.html":{}}}],["additem",{"_index":205,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{}}}],["addlistitem",{"_index":25,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{}}}],["addphoto",{"_index":206,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{}}}],["addscreen",{"_index":1,"title":{"components/AddScreen.html":{}},"body":{"components/AddScreen.html":{},"modules/AppModule.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"components/NevillsApp.html":{},"components/TabsPage.html":{},"coverage.html":{},"index.html":{}}}],["alert",{"_index":57,"title":{},"body":{"components/AddScreen.html":{}}}],["alertcontrol",{"_index":41,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"components/ListScreen.html":{},"injectables/StartupService.html":{},"components/TabsPage.html":{}}}],["alertctrl",{"_index":40,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"components/ListScreen.html":{},"injectables/StartupService.html":{},"components/TabsPage.html":{}}}],["android",{"_index":848,"title":{},"body":{"dependencies.html":{}}}],["angular",{"_index":107,"title":{},"body":{"components/AddScreen.html":{},"modules/AppModule.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"injectables/StartupService.html":{},"components/TabsPage.html":{},"dependencies.html":{}}}],["angular/anim",{"_index":834,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":103,"title":{},"body":{"components/AddScreen.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/compil",{"_index":836,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":100,"title":{},"body":{"components/AddScreen.html":{},"modules/AppModule.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"injectables/EventsService.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"components/NevillsApp.html":{},"pipes/OutdatedPipe.html":{},"injectables/PushService.html":{},"injectables/StartupService.html":{},"components/TabsPage.html":{},"dependencies.html":{}}}],["angular/form",{"_index":105,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"dependencies.html":{}}}],["angular/http",{"_index":838,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["app",{"_index":695,"title":{},"body":{"injectables/StartupService.html":{}}}],["app.compon",{"_index":279,"title":{},"body":{"modules/AppModule.html":{}}}],["app.html",{"_index":635,"title":{},"body":{"components/NevillsApp.html":{}}}],["applic",{"_index":641,"title":{},"body":{"components/NevillsApp.html":{},"injectables/StartupService.html":{}}}],["appmodul",{"_index":230,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["arg",{"_index":646,"title":{},"body":{"pipes/OutdatedPipe.html":{}}}],["args[0",{"_index":653,"title":{},"body":{"pipes/OutdatedPipe.html":{}}}],["array",{"_index":80,"title":{},"body":{"components/AddScreen.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"injectables/EventsService.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"injectables/StartupService.html":{},"components/TabsPage.html":{},"interfaces/iEvent.html":{},"interfaces/iTodo.html":{}}}],["ask",{"_index":778,"title":{},"body":{"components/TabsPage.html":{}}}],["assets/i18n",{"_index":294,"title":{},"body":{"modules/AppModule.html":{}}}],["autostart",{"_index":275,"title":{},"body":{"modules/AppModule.html":{},"injectables/PushService.html":{},"dependencies.html":{}}}],["avoid",{"_index":161,"title":{},"body":{"components/AddScreen.html":{}}}],["b",{"_index":609,"title":{},"body":{"components/ListScreen.html":{}}}],["back",{"_index":478,"title":{},"body":{"injectables/EventsService.html":{}}}],["backend",{"_index":188,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"injectables/EventsService.html":{},"components/ListScreen.html":{}}}],["badg",{"_index":770,"title":{},"body":{"components/TabsPage.html":{}}}],["baground",{"_index":664,"title":{},"body":{"injectables/PushService.html":{}}}],["bar",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"injectables/StartupService.html":{},"dependencies.html":{}}}],["base",{"_index":495,"title":{},"body":{"injectables/EventsService.html":{}}}],["befor",{"_index":701,"title":{},"body":{"injectables/StartupService.html":{}}}],["boolean",{"_index":651,"title":{},"body":{"pipes/OutdatedPipe.html":{},"components/TabsPage.html":{},"interfaces/iEvent.html":{},"interfaces/iTodo.html":{}}}],["bootstrap",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["brows",{"_index":890,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodul",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["button",{"_index":177,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"injectables/StartupService.html":{},"components/TabsPage.html":{}}}],["buttons.push",{"_index":585,"title":{},"body":{"components/HeaderComponent.html":{}}}],["cach",{"_index":825,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["calendar",{"_index":305,"title":{},"body":{"components/CalendarScreen.html":{}}}],["calendar'},{'nam",{"_index":216,"title":{},"body":{"components/AddScreen.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"components/NevillsApp.html":{},"components/TabsPage.html":{}}}],["calendar.html",{"_index":306,"title":{},"body":{"components/CalendarScreen.html":{}}}],["calendar/calendar",{"_index":769,"title":{},"body":{"components/TabsPage.html":{}}}],["calendarcompon",{"_index":328,"title":{},"body":{"components/CalendarScreen.html":{}}}],["calendaropt",{"_index":308,"title":{},"body":{"components/CalendarScreen.html":{}}}],["calendarscreen",{"_index":215,"title":{"components/CalendarScreen.html":{}},"body":{"components/AddScreen.html":{},"modules/AppModule.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"components/NevillsApp.html":{},"components/TabsPage.html":{},"coverage.html":{},"index.html":{}}}],["call",{"_index":694,"title":{},"body":{"injectables/StartupService.html":{},"components/TabsPage.html":{}}}],["callback",{"_index":581,"title":{},"body":{"components/HeaderComponent.html":{}}}],["camera",{"_index":35,"title":{},"body":{"components/AddScreen.html":{},"modules/AppModule.html":{},"components/EventScreen.html":{},"dependencies.html":{}}}],["cameraopt",{"_index":97,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{}}}],["cancel",{"_index":170,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{}}}],["catch(error",{"_index":726,"title":{},"body":{"injectables/StartupService.html":{}}}],["cd",{"_index":45,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"components/ListScreen.html":{},"components/TabsPage.html":{}}}],["chain",{"_index":555,"title":{},"body":{"injectables/EventsService.html":{},"injectables/StartupService.html":{}}}],["chang",{"_index":351,"title":{},"body":{"components/CalendarScreen.html":{},"components/EventScreen.html":{},"injectables/EventsService.html":{},"components/HeaderComponent.html":{}}}],["changedetectorref",{"_index":46,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"components/ListScreen.html":{},"components/TabsPage.html":{}}}],["changelang",{"_index":579,"title":{},"body":{"components/HeaderComponent.html":{}}}],["changephoto",{"_index":207,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{}}}],["check",{"_index":164,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"injectables/EventsService.html":{},"components/ListScreen.html":{},"pipes/OutdatedPipe.html":{},"components/TabsPage.html":{},"interfaces/iEvent.html":{},"interfaces/iTodo.html":{},"miscellaneous/variables.html":{}}}],["checkact",{"_index":747,"title":{},"body":{"components/TabsPage.html":{}}}],["checkactive(datestamp",{"_index":750,"title":{},"body":{"components/TabsPage.html":{}}}],["class",{"_index":116,"title":{},"body":{"components/AddScreen.html":{},"modules/AppModule.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"injectables/EventsService.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"components/NevillsApp.html":{},"pipes/OutdatedPipe.html":{},"injectables/PushService.html":{},"injectables/StartupService.html":{},"components/TabsPage.html":{}}}],["clean",{"_index":191,"title":{},"body":{"components/AddScreen.html":{},"injectables/EventsService.html":{}}}],["clear",{"_index":73,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"miscellaneous/variables.html":{}}}],["cli",{"_index":837,"title":{},"body":{"dependencies.html":{}}}],["click",{"_index":319,"title":{},"body":{"components/CalendarScreen.html":{},"components/EventScreen.html":{},"components/HeaderComponent.html":{}}}],["clickev",{"_index":310,"title":{},"body":{"components/CalendarScreen.html":{}}}],["clickevent(ev",{"_index":315,"title":{},"body":{"components/CalendarScreen.html":{}}}],["closur",{"_index":162,"title":{},"body":{"components/AddScreen.html":{}}}],["cluster_appmodul",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_bootstrap",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_declar",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_provid",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["compar",{"_index":648,"title":{},"body":{"pipes/OutdatedPipe.html":{}}}],["complet",{"_index":537,"title":{},"body":{"injectables/EventsService.html":{}}}],["compon",{"_index":0,"title":{"components/AddScreen.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"components/NevillsApp.html":{},"components/TabsPage.html":{}},"body":{"components/AddScreen.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"injectables/EventsService.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"components/NevillsApp.html":{},"injectables/StartupService.html":{},"components/TabsPage.html":{},"coverage.html":{},"index.html":{}}}],["component'},{'nam",{"_index":221,"title":{},"body":{"components/AddScreen.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"components/NevillsApp.html":{},"components/TabsPage.html":{}}}],["component_templ",{"_index":213,"title":{},"body":{"components/AddScreen.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"components/NevillsApp.html":{},"components/TabsPage.html":{}}}],["components/header/head",{"_index":280,"title":{},"body":{"modules/AppModule.html":{}}}],["concat",{"_index":338,"title":{},"body":{"components/CalendarScreen.html":{}}}],["config",{"_index":34,"title":{},"body":{"components/AddScreen.html":{},"modules/AppModule.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"injectables/EventsService.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"injectables/PushService.html":{},"injectables/StartupService.html":{},"components/TabsPage.html":{},"coverage.html":{},"index.html":{}}}],["config.servic",{"_index":110,"title":{},"body":{"components/AddScreen.html":{},"modules/AppModule.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"injectables/EventsService.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"injectables/PushService.html":{},"injectables/StartupService.html":{},"components/TabsPage.html":{}}}],["configur",{"_index":666,"title":{},"body":{"injectables/PushService.html":{}}}],["console.log('add",{"_index":200,"title":{},"body":{"components/AddScreen.html":{}}}],["console.log('ev",{"_index":721,"title":{},"body":{"injectables/StartupService.html":{}}}],["console.log('fil",{"_index":520,"title":{},"body":{"injectables/EventsService.html":{}}}],["console.log('form",{"_index":202,"title":{},"body":{"components/AddScreen.html":{}}}],["console.log('http",{"_index":549,"title":{},"body":{"injectables/EventsService.html":{}}}],["console.log('receiv",{"_index":685,"title":{},"body":{"injectables/PushService.html":{}}}],["console.log('token",{"_index":718,"title":{},"body":{"injectables/StartupService.html":{}}}],["const",{"_index":150,"title":{},"body":{"components/AddScreen.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"injectables/EventsService.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"injectables/StartupService.html":{},"components/TabsPage.html":{},"interfaces/iEvent.html":{},"interfaces/iTodo.html":{}}}],["constructor",{"_index":32,"title":{},"body":{"components/AddScreen.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"injectables/EventsService.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"components/NevillsApp.html":{},"injectables/PushService.html":{},"injectables/StartupService.html":{},"components/TabsPage.html":{}}}],["constructor(alertctrl",{"_index":748,"title":{},"body":{"components/TabsPage.html":{}}}],["constructor(config",{"_index":33,"title":{},"body":{"components/AddScreen.html":{},"components/CalendarScreen.html":{},"injectables/EventsService.html":{},"components/HeaderComponent.html":{},"injectables/PushService.html":{}}}],["constructor(load",{"_index":372,"title":{},"body":{"components/EventScreen.html":{},"components/ListScreen.html":{},"injectables/StartupService.html":{}}}],["constructor(priv",{"_index":120,"title":{},"body":{"components/AddScreen.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"injectables/EventsService.html":{},"components/ListScreen.html":{},"components/NevillsApp.html":{},"injectables/PushService.html":{},"injectables/StartupService.html":{}}}],["constructor(start",{"_index":637,"title":{},"body":{"components/NevillsApp.html":{}}}],["content",{"_index":184,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"components/ListScreen.html":{}}}],["control",{"_index":66,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{}}}],["control.at(i).patchvalue(itemvalu",{"_index":431,"title":{},"body":{"components/EventScreen.html":{}}}],["control.push(this.inititem",{"_index":152,"title":{},"body":{"components/AddScreen.html":{}}}],["control.push(this.setlistitem(emptytodo",{"_index":427,"title":{},"body":{"components/EventScreen.html":{}}}],["control.removeat(i",{"_index":154,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{}}}],["control.value[i",{"_index":429,"title":{},"body":{"components/EventScreen.html":{}}}],["copi",{"_index":159,"title":{},"body":{"components/AddScreen.html":{},"components/CalendarScreen.html":{}}}],["cordova",{"_index":847,"title":{},"body":{"dependencies.html":{}}}],["counter",{"_index":755,"title":{},"body":{"components/TabsPage.html":{}}}],["coverag",{"_index":795,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":68,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"components/HeaderComponent.html":{}}}],["createtranslateload",{"_index":298,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createtranslateloader(http",{"_index":292,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["custom",{"_index":85,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"miscellaneous/functions.html":{}}}],["data",{"_index":190,"title":{},"body":{"components/AddScreen.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"injectables/EventsService.html":{},"components/ListScreen.html":{},"injectables/PushService.html":{},"injectables/StartupService.html":{},"components/TabsPage.html":{},"interfaces/iEvent.html":{},"interfaces/iTodo.html":{}}}],["data.additionaldata",{"_index":781,"title":{},"body":{"components/TabsPage.html":{}}}],["data.additionaldata.url",{"_index":782,"title":{},"body":{"components/TabsPage.html":{}}}],["data.messag",{"_index":787,"title":{},"body":{"components/TabsPage.html":{}}}],["data.titl",{"_index":786,"title":{},"body":{"components/TabsPage.html":{}}}],["date",{"_index":141,"title":{},"body":{"components/AddScreen.html":{},"miscellaneous/functions.html":{}}}],["date().setseconds(0,0",{"_index":613,"title":{},"body":{"components/ListScreen.html":{},"components/TabsPage.html":{}}}],["date(event.start",{"_index":527,"title":{},"body":{"injectables/EventsService.html":{}}}],["date(newevent.start",{"_index":557,"title":{},"body":{"injectables/EventsService.html":{}}}],["date).gettim",{"_index":500,"title":{},"body":{"injectables/EventsService.html":{}}}],["datefieldkey",{"_index":883,"title":{},"body":{"miscellaneous/functions.html":{}}}],["datepip",{"_index":48,"title":{},"body":{"components/AddScreen.html":{},"modules/AppModule.html":{}}}],["datestamp",{"_index":475,"title":{},"body":{"injectables/EventsService.html":{},"components/ListScreen.html":{},"pipes/OutdatedPipe.html":{},"components/TabsPage.html":{},"interfaces/iEvent.html":{},"interfaces/iTodo.html":{}}}],["dd",{"_index":144,"title":{},"body":{"components/AddScreen.html":{}}}],["debug",{"_index":470,"title":{},"body":{"injectables/EventsService.html":{},"injectables/PushService.html":{}}}],["declar",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["decor",{"_index":329,"title":{},"body":{"components/CalendarScreen.html":{},"components/TabsPage.html":{}}}],["deep",{"_index":158,"title":{},"body":{"components/AddScreen.html":{},"components/CalendarScreen.html":{}}}],["default",{"_index":326,"title":{},"body":{"components/CalendarScreen.html":{},"components/EventScreen.html":{},"injectables/EventsService.html":{},"components/ListScreen.html":{},"components/NevillsApp.html":{},"injectables/PushService.html":{},"components/TabsPage.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":49,"title":{},"body":{"components/AddScreen.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"injectables/EventsService.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"components/NevillsApp.html":{},"pipes/OutdatedPipe.html":{},"injectables/PushService.html":{},"injectables/StartupService.html":{},"components/TabsPage.html":{}}}],["del",{"_index":563,"title":{},"body":{"injectables/EventsService.html":{}}}],["delet",{"_index":379,"title":{},"body":{"components/EventScreen.html":{},"injectables/EventsService.html":{},"components/ListScreen.html":{},"miscellaneous/variables.html":{}}}],["dep",{"_index":299,"title":{},"body":{"modules/AppModule.html":{}}}],["depend",{"_index":231,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["descript",{"_index":79,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"injectables/EventsService.html":{},"components/ListScreen.html":{},"injectables/PushService.html":{},"injectables/StartupService.html":{},"miscellaneous/functions.html":{},"interfaces/iEvent.html":{},"interfaces/iTodo.html":{},"miscellaneous/variables.html":{}}}],["devic",{"_index":93,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"injectables/EventsService.html":{},"injectables/PushService.html":{},"injectables/StartupService.html":{},"dependencies.html":{}}}],["digit",{"_index":498,"title":{},"body":{"injectables/EventsService.html":{}}}],["direct",{"_index":211,"title":{},"body":{"components/AddScreen.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"components/NevillsApp.html":{},"components/TabsPage.html":{}}}],["disabl",{"_index":128,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"miscellaneous/functions.html":{}}}],["dismiss",{"_index":629,"title":{},"body":{"components/ListScreen.html":{}}}],["display",{"_index":576,"title":{},"body":{"components/HeaderComponent.html":{},"components/ListScreen.html":{},"injectables/StartupService.html":{}}}],["document",{"_index":796,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AddScreen.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"components/NevillsApp.html":{},"components/TabsPage.html":{}}}],["dummi",{"_index":117,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"components/ListScreen.html":{},"injectables/PushService.html":{},"interfaces/iEvent.html":{},"interfaces/iTodo.html":{}}}],["dummyphoto",{"_index":21,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"components/ListScreen.html":{}}}],["dynam",{"_index":82,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"dependencies.html":{},"interfaces/iEvent.html":{},"interfaces/iTodo.html":{}}}],["e",{"_index":531,"title":{},"body":{"injectables/EventsService.html":{},"components/TabsPage.html":{}}}],["e.descript",{"_index":532,"title":{},"body":{"injectables/EventsService.html":{},"components/ListScreen.html":{}}}],["e.id",{"_index":554,"title":{},"body":{"injectables/EventsService.html":{}}}],["e.start",{"_index":632,"title":{},"body":{"components/ListScreen.html":{}}}],["e.tim",{"_index":633,"title":{},"body":{"components/ListScreen.html":{}}}],["e.titl",{"_index":631,"title":{},"body":{"components/ListScreen.html":{}}}],["edit",{"_index":364,"title":{},"body":{"components/EventScreen.html":{},"injectables/EventsService.html":{}}}],["editeventform",{"_index":365,"title":{},"body":{"components/EventScreen.html":{}}}],["element",{"_index":210,"title":{},"body":{"components/AddScreen.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"components/NevillsApp.html":{},"components/TabsPage.html":{}}}],["emit",{"_index":790,"title":{},"body":{"components/TabsPage.html":{}}}],["emitt",{"_index":491,"title":{},"body":{"injectables/EventsService.html":{},"components/ListScreen.html":{},"injectables/PushService.html":{}}}],["empti",{"_index":70,"title":{},"body":{"components/AddScreen.html":{},"injectables/EventsService.html":{}}}],["emptytodo",{"_index":113,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"coverage.html":{},"interfaces/iEvent.html":{},"interfaces/iTodo.html":{},"miscellaneous/variables.html":{}}}],["eneabl",{"_index":663,"title":{},"body":{"injectables/PushService.html":{}}}],["entrycompon",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["eof",{"_index":513,"title":{},"body":{"injectables/EventsService.html":{}}}],["err",{"_index":199,"title":{},"body":{"components/AddScreen.html":{},"injectables/EventsService.html":{}}}],["error",{"_index":165,"title":{},"body":{"components/AddScreen.html":{},"injectables/EventsService.html":{}}}],["error('no_connect",{"_index":712,"title":{},"body":{"injectables/StartupService.html":{}}}],["error('no_token",{"_index":717,"title":{},"body":{"injectables/StartupService.html":{}}}],["errorhandl",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["event",{"_index":56,"title":{},"body":{"components/AddScreen.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"injectables/EventsService.html":{},"components/ListScreen.html":{},"injectables/StartupService.html":{},"components/TabsPage.html":{},"miscellaneous/functions.html":{},"interfaces/iEvent.html":{},"interfaces/iTodo.html":{}}}],["event'},{'nam",{"_index":218,"title":{},"body":{"components/AddScreen.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"components/NevillsApp.html":{},"components/TabsPage.html":{}}}],["event).then",{"_index":552,"title":{},"body":{"injectables/EventsService.html":{}}}],["event.descript",{"_index":443,"title":{},"body":{"components/EventScreen.html":{}}}],["event.html",{"_index":363,"title":{},"body":{"components/EventScreen.html":{}}}],["event.id",{"_index":358,"title":{},"body":{"components/CalendarScreen.html":{},"injectables/EventsService.html":{}}}],["event.lang",{"_index":355,"title":{},"body":{"components/CalendarScreen.html":{}}}],["event.start",{"_index":446,"title":{},"body":{"components/EventScreen.html":{}}}],["event.tim",{"_index":447,"title":{},"body":{"components/EventScreen.html":{}}}],["event.time).gettime().tostr",{"_index":528,"title":{},"body":{"injectables/EventsService.html":{}}}],["event.titl",{"_index":174,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"components/ListScreen.html":{}}}],["event/ev",{"_index":335,"title":{},"body":{"components/CalendarScreen.html":{},"components/ListScreen.html":{}}}],["eventemitt",{"_index":488,"title":{},"body":{"injectables/EventsService.html":{},"injectables/PushService.html":{}}}],["eventpushedsub",{"_index":620,"title":{},"body":{"components/ListScreen.html":{}}}],["events.servic",{"_index":699,"title":{},"body":{"injectables/StartupService.html":{}}}],["events:array",{"_index":617,"title":{},"body":{"components/ListScreen.html":{}}}],["eventscreen",{"_index":217,"title":{"components/EventScreen.html":{}},"body":{"components/AddScreen.html":{},"modules/AppModule.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"components/NevillsApp.html":{},"components/TabsPage.html":{},"coverage.html":{},"index.html":{}}}],["eventservic",{"_index":38,"title":{},"body":{"components/AddScreen.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"components/ListScreen.html":{},"components/TabsPage.html":{}}}],["eventsservic",{"_index":39,"title":{"injectables/EventsService.html":{}},"body":{"components/AddScreen.html":{},"modules/AppModule.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"injectables/EventsService.html":{},"components/ListScreen.html":{},"injectables/StartupService.html":{},"components/TabsPage.html":{},"coverage.html":{},"index.html":{}}}],["eventsservice.generaterandomid",{"_index":526,"title":{},"body":{"injectables/EventsService.html":{}}}],["eventssub",{"_index":344,"title":{},"body":{"components/CalendarScreen.html":{},"components/EventScreen.html":{},"components/TabsPage.html":{}}}],["evt",{"_index":349,"title":{},"body":{"components/CalendarScreen.html":{},"components/EventScreen.html":{},"injectables/EventsService.html":{}}}],["evt).then",{"_index":540,"title":{},"body":{"injectables/EventsService.html":{}}}],["evt).then(_",{"_index":559,"title":{},"body":{"injectables/EventsService.html":{}}}],["evt.descript",{"_index":420,"title":{},"body":{"components/EventScreen.html":{}}}],["evt.id",{"_index":535,"title":{},"body":{"injectables/EventsService.html":{}}}],["evt.list",{"_index":529,"title":{},"body":{"injectables/EventsService.html":{}}}],["evt.list.filter((",{"_index":530,"title":{},"body":{"injectables/EventsService.html":{}}}],["evt.list.length",{"_index":414,"title":{},"body":{"components/EventScreen.html":{}}}],["evt.list.map((i",{"_index":415,"title":{},"body":{"components/EventScreen.html":{}}}],["evt.photo",{"_index":423,"title":{},"body":{"components/EventScreen.html":{}}}],["evt.start",{"_index":421,"title":{},"body":{"components/EventScreen.html":{}}}],["evt.tim",{"_index":422,"title":{},"body":{"components/EventScreen.html":{}}}],["evt.titl",{"_index":419,"title":{},"body":{"components/EventScreen.html":{}}}],["evt.token",{"_index":533,"title":{},"body":{"injectables/EventsService.html":{}}}],["evts.filt",{"_index":772,"title":{},"body":{"components/TabsPage.html":{}}}],["evts.sort((a",{"_index":625,"title":{},"body":{"components/ListScreen.html":{}}}],["exit",{"_index":406,"title":{},"body":{"components/EventScreen.html":{}}}],["export",{"_index":115,"title":{},"body":{"components/AddScreen.html":{},"modules/AppModule.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"injectables/EventsService.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"components/NevillsApp.html":{},"pipes/OutdatedPipe.html":{},"injectables/PushService.html":{},"injectables/StartupService.html":{},"components/TabsPage.html":{},"interfaces/iEvent.html":{},"interfaces/iTodo.html":{},"index.html":{}}}],["extend",{"_index":83,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"injectables/EventsService.html":{},"interfaces/iEvent.html":{},"interfaces/iTodo.html":{}}}],["fals",{"_index":396,"title":{},"body":{"components/EventScreen.html":{},"interfaces/iEvent.html":{},"interfaces/iTodo.html":{},"miscellaneous/variables.html":{}}}],["fcm",{"_index":656,"title":{},"body":{"injectables/PushService.html":{},"injectables/StartupService.html":{}}}],["field",{"_index":71,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"miscellaneous/functions.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AddScreen.html":{},"modules/AppModule.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"injectables/EventsService.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"components/NevillsApp.html":{},"pipes/OutdatedPipe.html":{},"injectables/PushService.html":{},"injectables/StartupService.html":{},"components/TabsPage.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"interfaces/iEvent.html":{},"interfaces/iTodo.html":{}}}],["fill",{"_index":337,"title":{},"body":{"components/CalendarScreen.html":{},"components/EventScreen.html":{}}}],["filter",{"_index":752,"title":{},"body":{"components/TabsPage.html":{}}}],["flag",{"_index":392,"title":{},"body":{"components/EventScreen.html":{}}}],["for(let",{"_index":583,"title":{},"body":{"components/HeaderComponent.html":{}}}],["form",{"_index":64,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"miscellaneous/functions.html":{}}}],["formbuild",{"_index":47,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{}}}],["formgroup",{"_index":94,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{}}}],["formgroup,formarray,formbuilder,valid",{"_index":104,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{}}}],["fulfil",{"_index":194,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"injectables/EventsService.html":{},"components/ListScreen.html":{},"injectables/PushService.html":{},"injectables/StartupService.html":{},"components/TabsPage.html":{}}}],["full",{"_index":607,"title":{},"body":{"components/ListScreen.html":{},"miscellaneous/functions.html":{}}}],["fullcalendar",{"_index":263,"title":{},"body":{"modules/AppModule.html":{},"components/CalendarScreen.html":{},"dependencies.html":{}}}],["fullcalendarmodul",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["function",{"_index":291,"title":{"miscellaneous/functions.html":{}},"body":{"modules/AppModule.html":{},"injectables/EventsService.html":{},"components/NevillsApp.html":{},"injectables/PushService.html":{},"components/TabsPage.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["gener",{"_index":493,"title":{},"body":{"injectables/EventsService.html":{}}}],["generaterandomid",{"_index":454,"title":{},"body":{"injectables/EventsService.html":{}}}],["getev",{"_index":455,"title":{},"body":{"injectables/EventsService.html":{}}}],["getevent(id",{"_index":462,"title":{},"body":{"injectables/EventsService.html":{}}}],["getitem",{"_index":894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getter",{"_index":464,"title":{},"body":{"injectables/EventsService.html":{}}}],["goe",{"_index":727,"title":{},"body":{"injectables/StartupService.html":{}}}],["googl",{"_index":862,"title":{},"body":{"dependencies.html":{}}}],["group",{"_index":65,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{}}}],["handler",{"_index":180,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"injectables/StartupService.html":{},"components/TabsPage.html":{}}}],["header",{"_index":220,"title":{},"body":{"components/AddScreen.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"components/NevillsApp.html":{},"components/TabsPage.html":{}}}],["header.html",{"_index":566,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercompon",{"_index":219,"title":{"components/HeaderComponent.html":{}},"body":{"components/AddScreen.html":{},"modules/AppModule.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"components/NevillsApp.html":{},"components/TabsPage.html":{},"coverage.html":{},"index.html":{}}}],["hex",{"_index":118,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"components/ListScreen.html":{}}}],["hh:mm",{"_index":145,"title":{},"body":{"components/AddScreen.html":{}}}],["html",{"_index":209,"title":{},"body":{"components/AddScreen.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"components/NevillsApp.html":{},"components/TabsPage.html":{}}}],["http",{"_index":458,"title":{},"body":{"injectables/EventsService.html":{},"injectables/StartupService.html":{},"miscellaneous/functions.html":{}}}],["http.servic",{"_index":490,"title":{},"body":{"injectables/EventsService.html":{},"injectables/StartupService.html":{}}}],["httpclient",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclientmodul",{"_index":258,"title":{},"body":{"modules/AppModule.html":{}}}],["httpservic",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"injectables/EventsService.html":{},"injectables/StartupService.html":{},"coverage.html":{},"index.html":{}}}],["i+1",{"_index":444,"title":{},"body":{"components/EventScreen.html":{}}}],["id",{"_index":320,"title":{},"body":{"components/CalendarScreen.html":{},"components/EventScreen.html":{},"injectables/EventsService.html":{},"components/ListScreen.html":{},"interfaces/iEvent.html":{},"interfaces/iTodo.html":{}}}],["identifi",{"_index":797,"title":{},"body":{"coverage.html":{}}}],["ievent",{"_index":316,"title":{"interfaces/iEvent.html":{}},"body":{"components/CalendarScreen.html":{},"components/EventScreen.html":{},"injectables/EventsService.html":{},"components/ListScreen.html":{},"injectables/StartupService.html":{},"coverage.html":{},"interfaces/iEvent.html":{},"interfaces/iTodo.html":{}}}],["if(!this.addeventform.error",{"_index":166,"title":{},"body":{"components/AddScreen.html":{}}}],["if(!this.editeventform.error",{"_index":439,"title":{},"body":{"components/EventScreen.html":{}}}],["if(!this.ev",{"_index":409,"title":{},"body":{"components/EventScreen.html":{}}}],["if(!this.load",{"_index":702,"title":{},"body":{"injectables/StartupService.html":{}}}],["if(!token",{"_index":716,"title":{},"body":{"injectables/StartupService.html":{}}}],["if(flag",{"_index":512,"title":{},"body":{"injectables/EventsService.html":{}}}],["if(window['cordova",{"_index":155,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"injectables/EventsService.html":{}}}],["implement",{"_index":9,"title":{},"body":{"components/AddScreen.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"components/ListScreen.html":{},"pipes/OutdatedPipe.html":{},"components/TabsPage.html":{}}}],["import",{"_index":99,"title":{},"body":{"components/AddScreen.html":{},"modules/AppModule.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"injectables/EventsService.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"components/NevillsApp.html":{},"pipes/OutdatedPipe.html":{},"injectables/PushService.html":{},"injectables/StartupService.html":{},"components/TabsPage.html":{}}}],["incom",{"_index":674,"title":{},"body":{"injectables/PushService.html":{},"components/TabsPage.html":{}}}],["index",{"_index":16,"title":{"index.html":{}},"body":{"components/AddScreen.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"injectables/EventsService.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"components/NevillsApp.html":{},"injectables/PushService.html":{},"injectables/StartupService.html":{},"components/TabsPage.html":{},"miscellaneous/functions.html":{},"interfaces/iEvent.html":{},"interfaces/iTodo.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AddScreen.html":{},"modules/AppModule.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"injectables/EventsService.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"components/NevillsApp.html":{},"pipes/OutdatedPipe.html":{},"injectables/PushService.html":{},"injectables/StartupService.html":{},"components/TabsPage.html":{},"interfaces/iEvent.html":{},"interfaces/iTodo.html":{}}}],["init",{"_index":324,"title":{},"body":{"components/CalendarScreen.html":{},"components/EventScreen.html":{},"injectables/EventsService.html":{},"injectables/PushService.html":{},"injectables/StartupService.html":{}}}],["initi",{"_index":673,"title":{},"body":{"injectables/PushService.html":{},"injectables/StartupService.html":{}}}],["inititem",{"_index":26,"title":{},"body":{"components/AddScreen.html":{}}}],["inittransl",{"_index":688,"title":{},"body":{"injectables/StartupService.html":{}}}],["inject",{"_index":448,"title":{"injectables/EventsService.html":{},"injectables/PushService.html":{},"injectables/StartupService.html":{}},"body":{"injectables/EventsService.html":{},"injectables/PushService.html":{},"injectables/StartupService.html":{},"coverage.html":{},"index.html":{}}}],["input",{"_index":568,"title":{},"body":{"components/HeaderComponent.html":{}}}],["input('titl",{"_index":577,"title":{},"body":{"components/HeaderComponent.html":{}}}],["int",{"_index":650,"title":{},"body":{"pipes/OutdatedPipe.html":{}}}],["interfac",{"_index":706,"title":{"interfaces/iEvent.html":{},"interfaces/iTodo.html":{}},"body":{"injectables/StartupService.html":{},"coverage.html":{},"interfaces/iEvent.html":{},"interfaces/iTodo.html":{},"index.html":{}}}],["interfaces/event.interfac",{"_index":114,"title":{},"body":{"components/AddScreen.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"injectables/EventsService.html":{},"components/ListScreen.html":{},"injectables/StartupService.html":{}}}],["interv",{"_index":759,"title":{},"body":{"components/TabsPage.html":{}}}],["ionic",{"_index":106,"title":{},"body":{"components/AddScreen.html":{},"modules/AppModule.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"injectables/EventsService.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"injectables/PushService.html":{},"injectables/StartupService.html":{},"components/TabsPage.html":{},"dependencies.html":{}}}],["ionic/pro",{"_index":842,"title":{},"body":{"dependencies.html":{}}}],["ionic/storag",{"_index":267,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["ionicapp",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["ionicerrorhandl",{"_index":265,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicmodul",{"_index":264,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicmodule.forroot(nevillsapp",{"_index":300,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicon",{"_index":866,"title":{},"body":{"dependencies.html":{}}}],["ionicstoragemodul",{"_index":266,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicstoragemodule.forroot",{"_index":301,"title":{},"body":{"modules/AppModule.html":{}}}],["ionviewwillent",{"_index":27,"title":{},"body":{"components/AddScreen.html":{},"components/ListScreen.html":{},"components/TabsPage.html":{}}}],["isubscript",{"_index":325,"title":{},"body":{"components/CalendarScreen.html":{},"components/EventScreen.html":{},"components/ListScreen.html":{},"components/TabsPage.html":{}}}],["item",{"_index":63,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"interfaces/iEvent.html":{},"interfaces/iTodo.html":{}}}],["item.descript",{"_index":445,"title":{},"body":{"components/EventScreen.html":{}}}],["itemvalu",{"_index":428,"title":{},"body":{"components/EventScreen.html":{}}}],["itemvalue.check",{"_index":430,"title":{},"body":{"components/EventScreen.html":{}}}],["itodo",{"_index":385,"title":{"interfaces/iTodo.html":{}},"body":{"components/EventScreen.html":{},"coverage.html":{},"interfaces/iEvent.html":{},"interfaces/iTodo.html":{}}}],["join",{"_index":508,"title":{},"body":{"injectables/EventsService.html":{}}}],["json",{"_index":295,"title":{},"body":{"modules/AppModule.html":{}}}],["json.parse(data",{"_index":517,"title":{},"body":{"injectables/EventsService.html":{}}}],["json.parse(ev",{"_index":523,"title":{},"body":{"injectables/EventsService.html":{}}}],["json.stringify(this.ev",{"_index":545,"title":{},"body":{"injectables/EventsService.html":{}}}],["key",{"_index":167,"title":{},"body":{"components/AddScreen.html":{},"components/HeaderComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["keyboard",{"_index":277,"title":{},"body":{"modules/AppModule.html":{},"injectables/StartupService.html":{},"dependencies.html":{}}}],["langchangeev",{"_index":333,"title":{},"body":{"components/CalendarScreen.html":{}}}],["langs']).subscribe(t",{"_index":580,"title":{},"body":{"components/HeaderComponent.html":{}}}],["languag",{"_index":582,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/StartupService.html":{}}}],["legend",{"_index":208,"title":{},"body":{"components/AddScreen.html":{},"modules/AppModule.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"components/NevillsApp.html":{},"components/TabsPage.html":{},"index.html":{}}}],["line",{"_index":388,"title":{},"body":{"components/EventScreen.html":{}}}],["list",{"_index":62,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"injectables/EventsService.html":{},"components/ListScreen.html":{},"components/TabsPage.html":{},"interfaces/iEvent.html":{},"interfaces/iTodo.html":{}}}],["list'},{'nam",{"_index":223,"title":{},"body":{"components/AddScreen.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"components/NevillsApp.html":{},"components/TabsPage.html":{}}}],["list.html",{"_index":596,"title":{},"body":{"components/ListScreen.html":{}}}],["list/list",{"_index":768,"title":{},"body":{"components/TabsPage.html":{}}}],["listarray",{"_index":413,"title":{},"body":{"components/EventScreen.html":{}}}],["listscreen",{"_index":222,"title":{"components/ListScreen.html":{}},"body":{"components/AddScreen.html":{},"modules/AppModule.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"components/NevillsApp.html":{},"components/TabsPage.html":{},"coverage.html":{},"index.html":{}}}],["listscreen.sortevents(a,b",{"_index":626,"title":{},"body":{"components/ListScreen.html":{}}}],["load",{"_index":42,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"components/ListScreen.html":{},"components/NevillsApp.html":{},"injectables/StartupService.html":{}}}],["loader",{"_index":182,"title":{},"body":{"components/AddScreen.html":{},"modules/AppModule.html":{},"components/EventScreen.html":{},"components/ListScreen.html":{},"injectables/StartupService.html":{},"dependencies.html":{}}}],["loader.dismiss",{"_index":197,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"components/ListScreen.html":{}}}],["loader.pres",{"_index":186,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"components/ListScreen.html":{}}}],["loadingcontrol",{"_index":43,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"components/ListScreen.html":{},"injectables/StartupService.html":{}}}],["local",{"_index":189,"title":{},"body":{"components/AddScreen.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"injectables/EventsService.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{}}}],["localesub",{"_index":352,"title":{},"body":{"components/CalendarScreen.html":{}}}],["localstorage.getitem(this.config.events_storage_key",{"_index":522,"title":{},"body":{"injectables/EventsService.html":{}}}],["localstorage.getitem(this.config.storage_fcm_token_key",{"_index":534,"title":{},"body":{"injectables/EventsService.html":{}}}],["localstorage.setitem(this.config.events_storage_key",{"_index":548,"title":{},"body":{"injectables/EventsService.html":{}}}],["localstorage.setitem(this.config.lang_key",{"_index":587,"title":{},"body":{"components/HeaderComponent.html":{}}}],["localstorage.setitem(this.config.storage_fcm_token_key",{"_index":719,"title":{},"body":{"injectables/StartupService.html":{}}}],["main",{"_index":692,"title":{},"body":{"injectables/StartupService.html":{}}}],["match",{"_index":228,"title":{},"body":{"components/AddScreen.html":{},"modules/AppModule.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"injectables/EventsService.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"components/NevillsApp.html":{},"pipes/OutdatedPipe.html":{},"injectables/PushService.html":{},"injectables/StartupService.html":{},"components/TabsPage.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"interfaces/iEvent.html":{},"interfaces/iTodo.html":{},"index.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["math.floor(1000",{"_index":501,"title":{},"body":{"injectables/EventsService.html":{}}}],["math.random",{"_index":502,"title":{},"body":{"injectables/EventsService.html":{}}}],["menu",{"_index":575,"title":{},"body":{"components/HeaderComponent.html":{}}}],["messag",{"_index":175,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"components/ListScreen.html":{},"injectables/StartupService.html":{},"components/TabsPage.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AddScreen.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"components/NevillsApp.html":{},"pipes/OutdatedPipe.html":{},"components/TabsPage.html":{}}}],["method",{"_index":23,"title":{},"body":{"components/AddScreen.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"injectables/EventsService.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"pipes/OutdatedPipe.html":{},"injectables/PushService.html":{},"injectables/StartupService.html":{},"components/TabsPage.html":{}}}],["miscellan",{"_index":878,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mm",{"_index":143,"title":{},"body":{"components/AddScreen.html":{}}}],["mock",{"_index":811,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":472,"title":{},"body":{"injectables/EventsService.html":{}}}],["modul",{"_index":229,"title":{"modules/AppModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["more']).subscribe(t",{"_index":785,"title":{},"body":{"components/TabsPage.html":{}}}],["name",{"_index":53,"title":{},"body":{"components/AddScreen.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"injectables/EventsService.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"components/NevillsApp.html":{},"pipes/OutdatedPipe.html":{},"injectables/PushService.html":{},"injectables/StartupService.html":{},"components/TabsPage.html":{},"miscellaneous/functions.html":{}}}],["native/autostart",{"_index":276,"title":{},"body":{"modules/AppModule.html":{},"injectables/PushService.html":{},"dependencies.html":{}}}],["native/camera",{"_index":108,"title":{},"body":{"components/AddScreen.html":{},"modules/AppModule.html":{},"components/EventScreen.html":{},"dependencies.html":{}}}],["native/cor",{"_index":840,"title":{},"body":{"dependencies.html":{}}}],["native/fcm",{"_index":841,"title":{},"body":{"dependencies.html":{}}}],["native/fil",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"injectables/EventsService.html":{},"dependencies.html":{}}}],["native/keyboard",{"_index":278,"title":{},"body":{"modules/AppModule.html":{},"injectables/StartupService.html":{},"dependencies.html":{}}}],["native/splash",{"_index":272,"title":{},"body":{"modules/AppModule.html":{},"injectables/StartupService.html":{},"dependencies.html":{}}}],["native/statu",{"_index":269,"title":{},"body":{"modules/AppModule.html":{},"injectables/StartupService.html":{},"dependencies.html":{}}}],["nav",{"_index":312,"title":{},"body":{"components/CalendarScreen.html":{},"components/EventScreen.html":{},"components/ListScreen.html":{}}}],["navcontrol",{"_index":313,"title":{},"body":{"components/CalendarScreen.html":{},"components/EventScreen.html":{},"components/ListScreen.html":{}}}],["navparam",{"_index":373,"title":{},"body":{"components/EventScreen.html":{}}}],["nevillsapp",{"_index":224,"title":{"components/NevillsApp.html":{}},"body":{"components/AddScreen.html":{},"modules/AppModule.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"components/NevillsApp.html":{},"components/TabsPage.html":{},"coverage.html":{},"index.html":{}}}],["new",{"_index":69,"title":{},"body":{"components/AddScreen.html":{},"modules/AppModule.html":{},"components/EventScreen.html":{},"injectables/EventsService.html":{},"components/ListScreen.html":{},"injectables/PushService.html":{},"components/TabsPage.html":{},"coverage.html":{}}}],["newev",{"_index":484,"title":{},"body":{"injectables/EventsService.html":{}}}],["newevent.time).gettime().tostr",{"_index":558,"title":{},"body":{"injectables/EventsService.html":{}}}],["ng",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"components/CalendarScreen.html":{},"dependencies.html":{}}}],["ngmodul",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["ngondestroy",{"_index":311,"title":{},"body":{"components/CalendarScreen.html":{},"components/EventScreen.html":{},"components/ListScreen.html":{},"components/TabsPage.html":{}}}],["ngoninit",{"_index":28,"title":{},"body":{"components/AddScreen.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"components/ListScreen.html":{},"components/TabsPage.html":{}}}],["ngx",{"_index":101,"title":{},"body":{"components/AddScreen.html":{},"modules/AppModule.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"injectables/StartupService.html":{},"components/TabsPage.html":{},"dependencies.html":{}}}],["no_connect",{"_index":731,"title":{},"body":{"injectables/StartupService.html":{}}}],["no_token']).subscribe(t",{"_index":732,"title":{},"body":{"injectables/StartupService.html":{}}}],["notif",{"_index":659,"title":{},"body":{"injectables/PushService.html":{}}}],["notifi",{"_index":492,"title":{},"body":{"injectables/EventsService.html":{},"injectables/PushService.html":{}}}],["null",{"_index":147,"title":{},"body":{"components/AddScreen.html":{},"components/TabsPage.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":76,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"pipes/OutdatedPipe.html":{},"components/TabsPage.html":{}}}],["object",{"_index":340,"title":{},"body":{"components/CalendarScreen.html":{},"components/EventScreen.html":{},"injectables/EventsService.html":{},"components/ListScreen.html":{},"injectables/PushService.html":{},"miscellaneous/variables.html":{}}}],["object.assign",{"_index":525,"title":{},"body":{"injectables/EventsService.html":{}}}],["object.assign(",{"_index":562,"title":{},"body":{"injectables/EventsService.html":{}}}],["old",{"_index":482,"title":{},"body":{"injectables/EventsService.html":{}}}],["oldev",{"_index":480,"title":{},"body":{"injectables/EventsService.html":{}}}],["oldevent).then",{"_index":556,"title":{},"body":{"injectables/EventsService.html":{}}}],["oldevent.id",{"_index":561,"title":{},"body":{"injectables/EventsService.html":{}}}],["ondestroy",{"_index":304,"title":{},"body":{"components/CalendarScreen.html":{},"components/EventScreen.html":{},"components/ListScreen.html":{},"components/TabsPage.html":{}}}],["oneventschang",{"_index":451,"title":{},"body":{"injectables/EventsService.html":{}}}],["oneventspush",{"_index":452,"title":{},"body":{"injectables/EventsService.html":{}}}],["oninit",{"_index":10,"title":{},"body":{"components/AddScreen.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"components/ListScreen.html":{},"components/TabsPage.html":{}}}],["onpush",{"_index":657,"title":{},"body":{"injectables/PushService.html":{}}}],["open",{"_index":192,"title":{},"body":{"components/AddScreen.html":{},"components/CalendarScreen.html":{},"components/ListScreen.html":{},"components/TabsPage.html":{}}}],["openev",{"_index":597,"title":{},"body":{"components/ListScreen.html":{}}}],["openevent(id",{"_index":603,"title":{},"body":{"components/ListScreen.html":{}}}],["option",{"_index":22,"title":{},"body":{"components/AddScreen.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"injectables/EventsService.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"components/NevillsApp.html":{},"pipes/OutdatedPipe.html":{},"injectables/PushService.html":{},"injectables/StartupService.html":{},"components/TabsPage.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["outdat",{"_index":130,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"components/ListScreen.html":{},"pipes/OutdatedPipe.html":{},"components/TabsPage.html":{},"miscellaneous/functions.html":{}}}],["outdatedpip",{"_index":239,"title":{"pipes/OutdatedPipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/OutdatedPipe.html":{},"coverage.html":{},"index.html":{}}}],["overview",{"_index":886,"title":{"index.html":{}},"body":{"index.html":{}}}],["packag",{"_index":833,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":318,"title":{},"body":{"components/CalendarScreen.html":{},"components/ListScreen.html":{}}}],["pages/add/add",{"_index":283,"title":{},"body":{"modules/AppModule.html":{}}}],["pages/calendar/calendar",{"_index":282,"title":{},"body":{"modules/AppModule.html":{}}}],["pages/event/ev",{"_index":284,"title":{},"body":{"modules/AppModule.html":{}}}],["pages/list/list",{"_index":281,"title":{},"body":{"modules/AppModule.html":{}}}],["pages/tabs/tab",{"_index":285,"title":{},"body":{"modules/AppModule.html":{},"components/NevillsApp.html":{}}}],["param",{"_index":153,"title":{},"body":{"components/AddScreen.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"injectables/EventsService.html":{},"components/ListScreen.html":{},"components/TabsPage.html":{}}}],["paramet",{"_index":51,"title":{},"body":{"components/AddScreen.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"injectables/EventsService.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"components/NevillsApp.html":{},"pipes/OutdatedPipe.html":{},"injectables/PushService.html":{},"injectables/StartupService.html":{},"components/TabsPage.html":{},"miscellaneous/functions.html":{}}}],["pars",{"_index":649,"title":{},"body":{"pipes/OutdatedPipe.html":{}}}],["parseint(a.datestamp",{"_index":623,"title":{},"body":{"components/ListScreen.html":{}}}],["parseint(b.datestamp",{"_index":624,"title":{},"body":{"components/ListScreen.html":{}}}],["parseint(datestamp",{"_index":774,"title":{},"body":{"components/TabsPage.html":{}}}],["parseint(valu",{"_index":654,"title":{},"body":{"pipes/OutdatedPipe.html":{}}}],["pass",{"_index":90,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"injectables/EventsService.html":{}}}],["path",{"_index":92,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{}}}],["phonegap",{"_index":869,"title":{},"body":{"dependencies.html":{}}}],["photo",{"_index":89,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"components/ListScreen.html":{},"interfaces/iEvent.html":{},"interfaces/iTodo.html":{}}}],["pipe",{"_index":618,"title":{"pipes/OutdatedPipe.html":{}},"body":{"components/ListScreen.html":{},"pipes/OutdatedPipe.html":{},"coverage.html":{},"index.html":{}}}],["pipes/outd",{"_index":289,"title":{},"body":{"modules/AppModule.html":{}}}],["pipetransform",{"_index":652,"title":{},"body":{"pipes/OutdatedPipe.html":{}}}],["placehold",{"_index":119,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"components/ListScreen.html":{}}}],["platform",{"_index":689,"title":{},"body":{"injectables/StartupService.html":{}}}],["plugin",{"_index":667,"title":{},"body":{"injectables/PushService.html":{},"dependencies.html":{}}}],["pop",{"_index":456,"title":{},"body":{"injectables/EventsService.html":{}}}],["pop(ev",{"_index":473,"title":{},"body":{"injectables/EventsService.html":{}}}],["popev",{"_index":366,"title":{},"body":{"components/EventScreen.html":{},"components/ListScreen.html":{}}}],["popevent(ev",{"_index":605,"title":{},"body":{"components/ListScreen.html":{}}}],["post",{"_index":550,"title":{},"body":{"injectables/EventsService.html":{}}}],["present",{"_index":590,"title":{},"body":{"components/HeaderComponent.html":{}}}],["presentactionsheet",{"_index":567,"title":{},"body":{"components/HeaderComponent.html":{}}}],["privat",{"_index":18,"title":{},"body":{"components/AddScreen.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"injectables/EventsService.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"injectables/PushService.html":{},"injectables/StartupService.html":{},"components/TabsPage.html":{}}}],["promis",{"_index":193,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"injectables/EventsService.html":{},"components/ListScreen.html":{},"injectables/PushService.html":{},"injectables/StartupService.html":{},"components/TabsPage.html":{}}}],["promise((r",{"_index":509,"title":{},"body":{"injectables/EventsService.html":{},"injectables/PushService.html":{}}}],["prompt",{"_index":58,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"injectables/StartupService.html":{},"components/TabsPage.html":{}}}],["prompt.pres",{"_index":201,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"components/ListScreen.html":{},"injectables/StartupService.html":{}}}],["properti",{"_index":17,"title":{},"body":{"components/AddScreen.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"injectables/EventsService.html":{},"components/ListScreen.html":{},"components/NevillsApp.html":{},"injectables/PushService.html":{},"injectables/StartupService.html":{},"components/TabsPage.html":{},"interfaces/iEvent.html":{},"interfaces/iTodo.html":{}}}],["provid",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["public",{"_index":20,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"injectables/EventsService.html":{},"components/ListScreen.html":{},"injectables/PushService.html":{},"injectables/StartupService.html":{}}}],["push",{"_index":187,"title":{},"body":{"components/AddScreen.html":{},"injectables/EventsService.html":{},"components/ListScreen.html":{},"injectables/PushService.html":{},"injectables/StartupService.html":{},"components/TabsPage.html":{},"dependencies.html":{}}}],["push(ev",{"_index":476,"title":{},"body":{"injectables/EventsService.html":{}}}],["push.servic",{"_index":700,"title":{},"body":{"injectables/StartupService.html":{}}}],["pushobject",{"_index":658,"title":{},"body":{"injectables/PushService.html":{}}}],["pushservic",{"_index":242,"title":{"injectables/PushService.html":{}},"body":{"modules/AppModule.html":{},"injectables/PushService.html":{},"injectables/StartupService.html":{},"components/TabsPage.html":{},"coverage.html":{},"index.html":{}}}],["pushsub",{"_index":779,"title":{},"body":{"components/TabsPage.html":{}}}],["put",{"_index":457,"title":{},"body":{"injectables/EventsService.html":{}}}],["put(newev",{"_index":479,"title":{},"body":{"injectables/EventsService.html":{}}}],["random",{"_index":494,"title":{},"body":{"injectables/EventsService.html":{}}}],["re",{"_index":519,"title":{},"body":{"injectables/EventsService.html":{}}}],["reach",{"_index":514,"title":{},"body":{"injectables/EventsService.html":{}}}],["reactiv",{"_index":882,"title":{},"body":{"miscellaneous/functions.html":{}}}],["read",{"_index":468,"title":{},"body":{"injectables/EventsService.html":{}}}],["readi",{"_index":705,"title":{},"body":{"injectables/StartupService.html":{}}}],["receiv",{"_index":665,"title":{},"body":{"injectables/PushService.html":{}}}],["record",{"_index":483,"title":{},"body":{"injectables/EventsService.html":{}}}],["recurs",{"_index":728,"title":{},"body":{"injectables/StartupService.html":{}}}],["reflect",{"_index":391,"title":{},"body":{"components/EventScreen.html":{}}}],["refresh",{"_index":758,"title":{},"body":{"components/TabsPage.html":{}}}],["regist",{"_index":660,"title":{},"body":{"injectables/PushService.html":{}}}],["registr",{"_index":670,"title":{},"body":{"injectables/PushService.html":{},"injectables/StartupService.html":{}}}],["rej",{"_index":524,"title":{},"body":{"injectables/EventsService.html":{}}}],["rej(err",{"_index":551,"title":{},"body":{"injectables/EventsService.html":{}}}],["remov",{"_index":78,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{}}}],["removeev",{"_index":347,"title":{},"body":{"components/CalendarScreen.html":{}}}],["removeitem",{"_index":897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["removelistitem",{"_index":29,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{}}}],["removelistitem(i",{"_index":75,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{}}}],["replac",{"_index":546,"title":{},"body":{"injectables/EventsService.html":{}}}],["res('brows",{"_index":683,"title":{},"body":{"injectables/PushService.html":{}}}],["res(data.registrationid",{"_index":682,"title":{},"body":{"injectables/PushService.html":{}}}],["res(this.ev",{"_index":521,"title":{},"body":{"injectables/EventsService.html":{}}}],["reset",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["result",{"_index":227,"title":{},"body":{"components/AddScreen.html":{},"modules/AppModule.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"injectables/EventsService.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"components/NevillsApp.html":{},"pipes/OutdatedPipe.html":{},"injectables/PushService.html":{},"injectables/StartupService.html":{},"components/TabsPage.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"interfaces/iEvent.html":{},"interfaces/iTodo.html":{},"index.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["retri",{"_index":729,"title":{},"body":{"injectables/StartupService.html":{}}}],["return",{"_index":59,"title":{},"body":{"components/AddScreen.html":{},"modules/AppModule.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"injectables/EventsService.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"pipes/OutdatedPipe.html":{},"injectables/PushService.html":{},"injectables/StartupService.html":{},"components/TabsPage.html":{},"miscellaneous/variables.html":{}}}],["role",{"_index":589,"title":{},"body":{"components/HeaderComponent.html":{}}}],["root",{"_index":696,"title":{},"body":{"injectables/StartupService.html":{}}}],["rootpag",{"_index":636,"title":{},"body":{"components/NevillsApp.html":{}}}],["routin",{"_index":693,"title":{},"body":{"injectables/StartupService.html":{}}}],["run",{"_index":639,"title":{},"body":{"components/NevillsApp.html":{}}}],["rxj",{"_index":871,"title":{},"body":{"dependencies.html":{}}}],["rxjs/subscript",{"_index":334,"title":{},"body":{"components/CalendarScreen.html":{},"components/EventScreen.html":{},"components/ListScreen.html":{},"components/TabsPage.html":{}}}],["save",{"_index":91,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"injectables/EventsService.html":{},"miscellaneous/functions.html":{}}}],["saveev",{"_index":367,"title":{},"body":{"components/EventScreen.html":{}}}],["screen",{"_index":273,"title":{},"body":{"modules/AppModule.html":{},"components/EventScreen.html":{},"components/ListScreen.html":{},"injectables/StartupService.html":{},"components/TabsPage.html":{},"dependencies.html":{}}}],["select",{"_index":574,"title":{},"body":{"components/HeaderComponent.html":{},"components/TabsPage.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AddScreen.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"components/NevillsApp.html":{},"components/TabsPage.html":{}}}],["send",{"_index":536,"title":{},"body":{"injectables/EventsService.html":{}}}],["servic",{"_index":450,"title":{},"body":{"injectables/EventsService.html":{},"components/ListScreen.html":{},"components/NevillsApp.html":{},"injectables/PushService.html":{},"injectables/StartupService.html":{},"dependencies.html":{}}}],["services/events.servic",{"_index":109,"title":{},"body":{"components/AddScreen.html":{},"modules/AppModule.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"components/ListScreen.html":{},"components/TabsPage.html":{}}}],["services/http.servic",{"_index":287,"title":{},"body":{"modules/AppModule.html":{}}}],["services/push.servic",{"_index":288,"title":{},"body":{"modules/AppModule.html":{},"components/TabsPage.html":{}}}],["services/startup.servic",{"_index":286,"title":{},"body":{"modules/AppModule.html":{},"components/NevillsApp.html":{}}}],["set",{"_index":387,"title":{},"body":{"components/EventScreen.html":{},"injectables/EventsService.html":{},"components/HeaderComponent.html":{},"injectables/PushService.html":{},"injectables/StartupService.html":{}}}],["setedit",{"_index":368,"title":{},"body":{"components/EventScreen.html":{}}}],["setfromgroup",{"_index":369,"title":{},"body":{"components/EventScreen.html":{}}}],["setinterv",{"_index":131,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"components/ListScreen.html":{},"components/TabsPage.html":{}}}],["setitem",{"_index":896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setlistitem",{"_index":370,"title":{},"body":{"components/EventScreen.html":{}}}],["setlistitem(lin",{"_index":384,"title":{},"body":{"components/EventScreen.html":{}}}],["setup",{"_index":290,"title":{},"body":{"modules/AppModule.html":{},"components/CalendarScreen.html":{},"injectables/StartupService.html":{},"components/TabsPage.html":{},"miscellaneous/functions.html":{}}}],["setupform",{"_index":30,"title":{},"body":{"components/AddScreen.html":{}}}],["show",{"_index":573,"title":{},"body":{"components/HeaderComponent.html":{}}}],["shuffl",{"_index":499,"title":{},"body":{"injectables/EventsService.html":{}}}],["sort(funct",{"_index":506,"title":{},"body":{"injectables/EventsService.html":{}}}],["sortev",{"_index":598,"title":{},"body":{"components/ListScreen.html":{}}}],["sortevents(a",{"_index":608,"title":{},"body":{"components/ListScreen.html":{}}}],["sound",{"_index":884,"title":{},"body":{"interfaces/iEvent.html":{},"interfaces/iTodo.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AddScreen.html":{},"modules/AppModule.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"injectables/EventsService.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"components/NevillsApp.html":{},"pipes/OutdatedPipe.html":{},"injectables/PushService.html":{},"injectables/StartupService.html":{},"components/TabsPage.html":{},"interfaces/iEvent.html":{},"interfaces/iTodo.html":{}}}],["special",{"_index":619,"title":{},"body":{"components/ListScreen.html":{}}}],["splashscreen",{"_index":271,"title":{},"body":{"modules/AppModule.html":{},"injectables/StartupService.html":{},"dependencies.html":{}}}],["split",{"_index":505,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/.../app.module.t",{"_index":879,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../event.interface.t",{"_index":892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../http.service.t",{"_index":891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../jestglobalmocks.t",{"_index":893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../time.validator.t",{"_index":880,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app.component.t",{"_index":634,"title":{},"body":{"components/NevillsApp.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":638,"title":{},"body":{"components/NevillsApp.html":{}}}],["src/app/app.module.t",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/components/header/header.t",{"_index":565,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/components/header/header.ts:13",{"_index":571,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/components/header/header.ts:25",{"_index":572,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/config.service.t",{"_index":804,"title":{},"body":{"coverage.html":{}}}],["src/interfaces/event.interface.t",{"_index":807,"title":{},"body":{"coverage.html":{},"interfaces/iEvent.html":{},"interfaces/iTodo.html":{},"miscellaneous/variables.html":{}}}],["src/jestglobalmocks.t",{"_index":810,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/pages/add/add.t",{"_index":8,"title":{},"body":{"components/AddScreen.html":{},"coverage.html":{}}}],["src/pages/add/add.ts:107",{"_index":55,"title":{},"body":{"components/AddScreen.html":{}}}],["src/pages/add/add.ts:19",{"_index":96,"title":{},"body":{"components/AddScreen.html":{}}}],["src/pages/add/add.ts:20",{"_index":98,"title":{},"body":{"components/AddScreen.html":{}}}],["src/pages/add/add.ts:21",{"_index":50,"title":{},"body":{"components/AddScreen.html":{}}}],["src/pages/add/add.ts:37",{"_index":74,"title":{},"body":{"components/AddScreen.html":{}}}],["src/pages/add/add.ts:46",{"_index":72,"title":{},"body":{"components/AddScreen.html":{}}}],["src/pages/add/add.ts:54",{"_index":81,"title":{},"body":{"components/AddScreen.html":{}}}],["src/pages/add/add.ts:69",{"_index":67,"title":{},"body":{"components/AddScreen.html":{}}}],["src/pages/add/add.ts:76",{"_index":61,"title":{},"body":{"components/AddScreen.html":{}}}],["src/pages/add/add.ts:86",{"_index":77,"title":{},"body":{"components/AddScreen.html":{}}}],["src/pages/add/add.ts:95",{"_index":87,"title":{},"body":{"components/AddScreen.html":{}}}],["src/pages/calendar/calendar.t",{"_index":303,"title":{},"body":{"components/CalendarScreen.html":{},"coverage.html":{}}}],["src/pages/calendar/calendar.ts:18",{"_index":327,"title":{},"body":{"components/CalendarScreen.html":{}}}],["src/pages/calendar/calendar.ts:19",{"_index":331,"title":{},"body":{"components/CalendarScreen.html":{}}}],["src/pages/calendar/calendar.ts:22",{"_index":314,"title":{},"body":{"components/CalendarScreen.html":{}}}],["src/pages/calendar/calendar.ts:34",{"_index":322,"title":{},"body":{"components/CalendarScreen.html":{}}}],["src/pages/calendar/calendar.ts:55",{"_index":317,"title":{},"body":{"components/CalendarScreen.html":{}}}],["src/pages/calendar/calendar.ts:59",{"_index":321,"title":{},"body":{"components/CalendarScreen.html":{}}}],["src/pages/event/event.t",{"_index":362,"title":{},"body":{"components/EventScreen.html":{},"coverage.html":{}}}],["src/pages/event/event.ts:108",{"_index":380,"title":{},"body":{"components/EventScreen.html":{}}}],["src/pages/event/event.ts:118",{"_index":390,"title":{},"body":{"components/EventScreen.html":{}}}],["src/pages/event/event.ts:129",{"_index":394,"title":{},"body":{"components/EventScreen.html":{}}}],["src/pages/event/event.ts:141",{"_index":378,"title":{},"body":{"components/EventScreen.html":{}}}],["src/pages/event/event.ts:177",{"_index":381,"title":{},"body":{"components/EventScreen.html":{}}}],["src/pages/event/event.ts:19",{"_index":395,"title":{},"body":{"components/EventScreen.html":{}}}],["src/pages/event/event.ts:21",{"_index":399,"title":{},"body":{"components/EventScreen.html":{}}}],["src/pages/event/event.ts:215",{"_index":376,"title":{},"body":{"components/EventScreen.html":{}}}],["src/pages/event/event.ts:22",{"_index":397,"title":{},"body":{"components/EventScreen.html":{}}}],["src/pages/event/event.ts:23",{"_index":400,"title":{},"body":{"components/EventScreen.html":{}}}],["src/pages/event/event.ts:24",{"_index":398,"title":{},"body":{"components/EventScreen.html":{}}}],["src/pages/event/event.ts:27",{"_index":374,"title":{},"body":{"components/EventScreen.html":{}}}],["src/pages/event/event.ts:52",{"_index":377,"title":{},"body":{"components/EventScreen.html":{}}}],["src/pages/event/event.ts:65",{"_index":382,"title":{},"body":{"components/EventScreen.html":{}}}],["src/pages/event/event.ts:73",{"_index":383,"title":{},"body":{"components/EventScreen.html":{}}}],["src/pages/event/event.ts:91",{"_index":386,"title":{},"body":{"components/EventScreen.html":{}}}],["src/pages/event/event.ts:98",{"_index":375,"title":{},"body":{"components/EventScreen.html":{}}}],["src/pages/list/list.t",{"_index":595,"title":{},"body":{"components/ListScreen.html":{},"coverage.html":{}}}],["src/pages/list/list.ts:109",{"_index":604,"title":{},"body":{"components/ListScreen.html":{}}}],["src/pages/list/list.ts:113",{"_index":601,"title":{},"body":{"components/ListScreen.html":{}}}],["src/pages/list/list.ts:17",{"_index":615,"title":{},"body":{"components/ListScreen.html":{}}}],["src/pages/list/list.ts:18",{"_index":616,"title":{},"body":{"components/ListScreen.html":{}}}],["src/pages/list/list.ts:20",{"_index":614,"title":{},"body":{"components/ListScreen.html":{}}}],["src/pages/list/list.ts:23",{"_index":599,"title":{},"body":{"components/ListScreen.html":{}}}],["src/pages/list/list.ts:42",{"_index":610,"title":{},"body":{"components/ListScreen.html":{}}}],["src/pages/list/list.ts:48",{"_index":602,"title":{},"body":{"components/ListScreen.html":{}}}],["src/pages/list/list.ts:64",{"_index":600,"title":{},"body":{"components/ListScreen.html":{}}}],["src/pages/list/list.ts:73",{"_index":606,"title":{},"body":{"components/ListScreen.html":{}}}],["src/pages/tabs/tabs.t",{"_index":740,"title":{},"body":{"components/TabsPage.html":{},"coverage.html":{}}}],["src/pages/tabs/tabs.ts:104",{"_index":753,"title":{},"body":{"components/TabsPage.html":{}}}],["src/pages/tabs/tabs.ts:109",{"_index":756,"title":{},"body":{"components/TabsPage.html":{}}}],["src/pages/tabs/tabs.ts:17",{"_index":766,"title":{},"body":{"components/TabsPage.html":{}}}],["src/pages/tabs/tabs.ts:19",{"_index":762,"title":{},"body":{"components/TabsPage.html":{}}}],["src/pages/tabs/tabs.ts:20",{"_index":763,"title":{},"body":{"components/TabsPage.html":{}}}],["src/pages/tabs/tabs.ts:21",{"_index":764,"title":{},"body":{"components/TabsPage.html":{}}}],["src/pages/tabs/tabs.ts:24",{"_index":760,"title":{},"body":{"components/TabsPage.html":{}}}],["src/pages/tabs/tabs.ts:25",{"_index":761,"title":{},"body":{"components/TabsPage.html":{}}}],["src/pages/tabs/tabs.ts:28",{"_index":749,"title":{},"body":{"components/TabsPage.html":{}}}],["src/pages/tabs/tabs.ts:51",{"_index":751,"title":{},"body":{"components/TabsPage.html":{}}}],["src/pages/tabs/tabs.ts:58",{"_index":757,"title":{},"body":{"components/TabsPage.html":{}}}],["src/pipes/outdated.t",{"_index":643,"title":{},"body":{"pipes/OutdatedPipe.html":{},"coverage.html":{}}}],["src/pipes/outdated.ts:11",{"_index":647,"title":{},"body":{"pipes/OutdatedPipe.html":{}}}],["src/services/events.service.t",{"_index":449,"title":{},"body":{"injectables/EventsService.html":{},"coverage.html":{}}}],["src/services/events.service.ts:127",{"_index":474,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/services/events.service.ts:14",{"_index":487,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/services/events.service.ts:157",{"_index":481,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/services/events.service.ts:16",{"_index":489,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/services/events.service.ts:18",{"_index":459,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/services/events.service.ts:203",{"_index":461,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/services/events.service.ts:212",{"_index":463,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/services/events.service.ts:26",{"_index":460,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/services/events.service.ts:40",{"_index":467,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/services/events.service.ts:87",{"_index":477,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/services/http.service.t",{"_index":822,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/services/push.service.t",{"_index":655,"title":{},"body":{"injectables/PushService.html":{},"coverage.html":{}}}],["src/services/push.service.ts:12",{"_index":672,"title":{},"body":{"injectables/PushService.html":{}}}],["src/services/push.service.ts:14",{"_index":661,"title":{},"body":{"injectables/PushService.html":{}}}],["src/services/push.service.ts:24",{"_index":662,"title":{},"body":{"injectables/PushService.html":{}}}],["src/services/push.service.ts:36",{"_index":669,"title":{},"body":{"injectables/PushService.html":{}}}],["src/services/push.service.ts:51",{"_index":668,"title":{},"body":{"injectables/PushService.html":{}}}],["src/services/startup.service.t",{"_index":687,"title":{},"body":{"injectables/StartupService.html":{},"coverage.html":{}}}],["src/services/startup.service.ts:19",{"_index":690,"title":{},"body":{"injectables/StartupService.html":{}}}],["src/services/startup.service.ts:37",{"_index":691,"title":{},"body":{"injectables/StartupService.html":{}}}],["src/services/startup.service.ts:89",{"_index":697,"title":{},"body":{"injectables/StartupService.html":{}}}],["src/validators/time.validator.t",{"_index":830,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":139,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"injectables/EventsService.html":{},"components/NevillsApp.html":{},"interfaces/iEvent.html":{},"interfaces/iTodo.html":{}}}],["startup",{"_index":640,"title":{},"body":{"components/NevillsApp.html":{},"injectables/StartupService.html":{}}}],["startupservic",{"_index":243,"title":{"injectables/StartupService.html":{}},"body":{"modules/AppModule.html":{},"components/NevillsApp.html":{},"injectables/StartupService.html":{},"coverage.html":{},"index.html":{}}}],["statement",{"_index":798,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":453,"title":{},"body":{"injectables/EventsService.html":{},"components/ListScreen.html":{},"components/TabsPage.html":{}}}],["statusbar",{"_index":268,"title":{},"body":{"modules/AppModule.html":{},"injectables/StartupService.html":{},"dependencies.html":{}}}],["storag",{"_index":469,"title":{},"body":{"injectables/EventsService.html":{},"injectables/StartupService.html":{},"miscellaneous/variables.html":{}}}],["storage[key",{"_index":895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store",{"_index":466,"title":{},"body":{"injectables/EventsService.html":{},"injectables/PushService.html":{}}}],["string",{"_index":95,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"injectables/EventsService.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"pipes/OutdatedPipe.html":{},"injectables/StartupService.html":{},"components/TabsPage.html":{},"interfaces/iEvent.html":{},"interfaces/iTodo.html":{}}}],["structur",{"_index":885,"title":{},"body":{"interfaces/iEvent.html":{},"interfaces/iTodo.html":{}}}],["subscrib",{"_index":323,"title":{},"body":{"components/CalendarScreen.html":{},"components/ListScreen.html":{},"components/TabsPage.html":{}}}],["subscript",{"_index":336,"title":{},"body":{"components/CalendarScreen.html":{},"components/EventScreen.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"components/TabsPage.html":{}}}],["subscription.unsubscrib",{"_index":361,"title":{},"body":{"components/CalendarScreen.html":{},"components/EventScreen.html":{},"components/ListScreen.html":{},"components/TabsPage.html":{}}}],["successfulli",{"_index":485,"title":{},"body":{"injectables/EventsService.html":{}}}],["support",{"_index":861,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["svg",{"_index":889,"title":{},"body":{"modules.html":{}}}],["sw",{"_index":873,"title":{},"body":{"dependencies.html":{}}}],["switchtodolistitem",{"_index":371,"title":{},"body":{"components/EventScreen.html":{}}}],["switchtodolistitem(i",{"_index":389,"title":{},"body":{"components/EventScreen.html":{}}}],["t.add",{"_index":173,"title":{},"body":{"components/AddScreen.html":{}}}],["t.cancel",{"_index":179,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{}}}],["t.changelang",{"_index":593,"title":{},"body":{"components/HeaderComponent.html":{}}}],["t.check",{"_index":176,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"components/ListScreen.html":{}}}],["t.close",{"_index":788,"title":{},"body":{"components/TabsPage.html":{}}}],["t.delet",{"_index":434,"title":{},"body":{"components/EventScreen.html":{},"components/ListScreen.html":{}}}],["t.error",{"_index":733,"title":{},"body":{"injectables/StartupService.html":{}}}],["t.langs[key",{"_index":586,"title":{},"body":{"components/HeaderComponent.html":{}}}],["t.more",{"_index":789,"title":{},"body":{"components/TabsPage.html":{}}}],["t.retri",{"_index":735,"title":{},"body":{"injectables/StartupService.html":{}}}],["t.save",{"_index":440,"title":{},"body":{"components/EventScreen.html":{}}}],["t.wait",{"_index":185,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"components/ListScreen.html":{}}}],["t[error.messag",{"_index":734,"title":{},"body":{"injectables/StartupService.html":{}}}],["tab",{"_index":44,"title":{},"body":{"components/AddScreen.html":{},"injectables/EventsService.html":{},"components/ListScreen.html":{},"components/TabsPage.html":{}}}],["tab1root",{"_index":743,"title":{},"body":{"components/TabsPage.html":{}}}],["tab2root",{"_index":744,"title":{},"body":{"components/TabsPage.html":{}}}],["tab3root",{"_index":745,"title":{},"body":{"components/TabsPage.html":{}}}],["tabl",{"_index":832,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":831,"title":{},"body":{"coverage.html":{}}}],["tabref",{"_index":746,"title":{},"body":{"components/TabsPage.html":{}}}],["tabs.html",{"_index":741,"title":{},"body":{"components/TabsPage.html":{}}}],["tabs:tab",{"_index":121,"title":{},"body":{"components/AddScreen.html":{}}}],["tabspag",{"_index":225,"title":{"components/TabsPage.html":{}},"body":{"components/AddScreen.html":{},"modules/AppModule.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"components/NevillsApp.html":{},"components/TabsPage.html":{},"coverage.html":{},"index.html":{}}}],["tabspage.checkactive(e.datestamp)).length",{"_index":773,"title":{},"body":{"components/TabsPage.html":{}}}],["take",{"_index":88,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{}}}],["takephoto",{"_index":31,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AddScreen.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"components/NevillsApp.html":{},"components/TabsPage.html":{}}}],["templateurl",{"_index":14,"title":{},"body":{"components/AddScreen.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"components/NevillsApp.html":{},"components/TabsPage.html":{}}}],["text",{"_index":178,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"injectables/StartupService.html":{},"components/TabsPage.html":{}}}],["then((token",{"_index":715,"title":{},"body":{"injectables/StartupService.html":{}}}],["this._subscriptions.map(subscript",{"_index":360,"title":{},"body":{"components/CalendarScreen.html":{},"components/EventScreen.html":{},"components/ListScreen.html":{},"components/TabsPage.html":{}}}],["this._subscriptions.push(eventpushedsub",{"_index":622,"title":{},"body":{"components/ListScreen.html":{}}}],["this._subscriptions.push(eventssub",{"_index":356,"title":{},"body":{"components/CalendarScreen.html":{},"components/EventScreen.html":{},"components/ListScreen.html":{},"components/TabsPage.html":{}}}],["this._subscriptions.push(pushsub",{"_index":794,"title":{},"body":{"components/TabsPage.html":{}}}],["this.actionsheetctrl.cr",{"_index":592,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.activeev",{"_index":771,"title":{},"body":{"components/TabsPage.html":{}}}],["this.addeventform",{"_index":135,"title":{},"body":{"components/AddScreen.html":{}}}],["this.addeventform.controls['list",{"_index":151,"title":{},"body":{"components/AddScreen.html":{}}}],["this.addeventform.controls['photo'].patchvalue(imagedata",{"_index":157,"title":{},"body":{"components/AddScreen.html":{}}}],["this.addeventform.controls['time'].updatevalueandvalid",{"_index":132,"title":{},"body":{"components/AddScreen.html":{}}}],["this.addeventform.error",{"_index":203,"title":{},"body":{"components/AddScreen.html":{}}}],["this.addeventform.reset",{"_index":196,"title":{},"body":{"components/AddScreen.html":{}}}],["this.addeventform.valu",{"_index":163,"title":{},"body":{"components/AddScreen.html":{}}}],["this.alertctrl.cr",{"_index":172,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"components/ListScreen.html":{},"injectables/StartupService.html":{},"components/TabsPage.html":{}}}],["this.autostart.en",{"_index":677,"title":{},"body":{"injectables/PushService.html":{}}}],["this.calendaropt",{"_index":341,"title":{},"body":{"components/CalendarScreen.html":{}}}],["this.camera.getpicture(this.options).then((imagedata",{"_index":156,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{}}}],["this.cd.detectchang",{"_index":134,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"components/ListScreen.html":{},"components/TabsPage.html":{}}}],["this.config.backend.api.lay",{"_index":539,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.config.calendar_config",{"_index":342,"title":{},"body":{"components/CalendarScreen.html":{}}}],["this.config.camera_opt",{"_index":125,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{}}}],["this.config.dummy_photo_hash",{"_index":123,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"components/ListScreen.html":{}}}],["this.config.filenam",{"_index":544,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.config.filename).then((data",{"_index":516,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.config.filename).then((flag",{"_index":511,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.config.interv",{"_index":133,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"components/ListScreen.html":{},"components/TabsPage.html":{}}}],["this.config.languag",{"_index":584,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.datepipe.transform(new",{"_index":140,"title":{},"body":{"components/AddScreen.html":{}}}],["this.datestamp",{"_index":627,"title":{},"body":{"components/ListScreen.html":{}}}],["this.dummyphoto",{"_index":122,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"components/ListScreen.html":{}}}],["this.edit",{"_index":412,"title":{},"body":{"components/EventScreen.html":{}}}],["this.editeventform",{"_index":418,"title":{},"body":{"components/EventScreen.html":{}}}],["this.editeventform.controls['list",{"_index":426,"title":{},"body":{"components/EventScreen.html":{}}}],["this.editeventform.controls['photo'].patchvalue(imagedata",{"_index":432,"title":{},"body":{"components/EventScreen.html":{}}}],["this.editeventform.controls['time'].updatevalueandvalid",{"_index":411,"title":{},"body":{"components/EventScreen.html":{}}}],["this.editeventform.valu",{"_index":438,"title":{},"body":{"components/EventScreen.html":{}}}],["this.ev",{"_index":404,"title":{},"body":{"components/EventScreen.html":{},"injectables/EventsService.html":{},"components/ListScreen.html":{}}}],["this.event).then(_",{"_index":442,"title":{},"body":{"components/EventScreen.html":{}}}],["this.event.titl",{"_index":435,"title":{},"body":{"components/EventScreen.html":{}}}],["this.events.filter(",{"_index":553,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.events.find((",{"_index":564,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.events.init",{"_index":720,"title":{},"body":{"injectables/StartupService.html":{}}}],["this.events.map((",{"_index":560,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.events.push(evt",{"_index":542,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.eventservice.get",{"_index":343,"title":{},"body":{"components/CalendarScreen.html":{}}}],["this.eventservice.get().filt",{"_index":776,"title":{},"body":{"components/TabsPage.html":{}}}],["this.eventservice.get().sort((a",{"_index":628,"title":{},"body":{"components/ListScreen.html":{}}}],["this.eventservice.getevent(id",{"_index":405,"title":{},"body":{"components/EventScreen.html":{}}}],["this.eventservice.oneventschange.subscribe((evt",{"_index":345,"title":{},"body":{"components/CalendarScreen.html":{},"components/TabsPage.html":{}}}],["this.eventservice.oneventschange.subscribe(_",{"_index":401,"title":{},"body":{"components/EventScreen.html":{}}}],["this.eventservice.oneventspushed.emit(data.additionaldata.url",{"_index":792,"title":{},"body":{"components/TabsPage.html":{}}}],["this.eventservice.oneventspushed.subscribe((id",{"_index":621,"title":{},"body":{"components/ListScreen.html":{}}}],["this.eventservice.pop(event).then(_",{"_index":630,"title":{},"body":{"components/ListScreen.html":{}}}],["this.eventservice.pop(this.event).then(_",{"_index":437,"title":{},"body":{"components/EventScreen.html":{}}}],["this.eventservice.push(event).then(_",{"_index":195,"title":{},"body":{"components/AddScreen.html":{}}}],["this.eventservice.put(ev",{"_index":441,"title":{},"body":{"components/EventScreen.html":{}}}],["this.file.checkfile(this.file.datadirectori",{"_index":510,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.file.readastext(this.file.datadirectori",{"_index":515,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.file.writefile(this.file.datadirectori",{"_index":543,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.formbuilder.array([this.inititem",{"_index":148,"title":{},"body":{"components/AddScreen.html":{}}}],["this.formbuilder.array(listarray",{"_index":424,"title":{},"body":{"components/EventScreen.html":{}}}],["this.formbuilder.group",{"_index":136,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{}}}],["this.formbuilder.group(emptytodo",{"_index":149,"title":{},"body":{"components/AddScreen.html":{}}}],["this.formbuilder.group(lin",{"_index":425,"title":{},"body":{"components/EventScreen.html":{}}}],["this.http.isonlin",{"_index":710,"title":{},"body":{"injectables/StartupService.html":{}}}],["this.http.listenonlineofflin",{"_index":708,"title":{},"body":{"injectables/StartupService.html":{}}}],["this.http.post(this.config.backend.host",{"_index":538,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.init",{"_index":736,"title":{},"body":{"injectables/StartupService.html":{}}}],["this.inittransl",{"_index":709,"title":{},"body":{"injectables/StartupService.html":{}}}],["this.keyboard.disablescroll(tru",{"_index":724,"title":{},"body":{"injectables/StartupService.html":{}}}],["this.load",{"_index":703,"title":{},"body":{"injectables/StartupService.html":{}}}],["this.loader.dismiss",{"_index":725,"title":{},"body":{"injectables/StartupService.html":{}}}],["this.loader.pres",{"_index":704,"title":{},"body":{"injectables/StartupService.html":{}}}],["this.loading.cr",{"_index":183,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"components/ListScreen.html":{},"injectables/StartupService.html":{}}}],["this.nav.poptoroot",{"_index":402,"title":{},"body":{"components/EventScreen.html":{},"components/ListScreen.html":{}}}],["this.nav.push(eventscreen",{"_index":357,"title":{},"body":{"components/CalendarScreen.html":{},"components/ListScreen.html":{}}}],["this.notif",{"_index":680,"title":{},"body":{"injectables/PushService.html":{}}}],["this.oneventschange.emit(this.ev",{"_index":518,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.onpush.emit(data",{"_index":686,"title":{},"body":{"injectables/PushService.html":{}}}],["this.opt",{"_index":124,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{}}}],["this.params.get('id",{"_index":403,"title":{},"body":{"components/EventScreen.html":{}}}],["this.platform.ready().then",{"_index":707,"title":{},"body":{"injectables/StartupService.html":{}}}],["this.prompt",{"_index":783,"title":{},"body":{"components/TabsPage.html":{}}}],["this.prompt.pres",{"_index":793,"title":{},"body":{"components/TabsPage.html":{}}}],["this.push.init",{"_index":713,"title":{},"body":{"injectables/StartupService.html":{}}}],["this.push.onpush.subscribe((data",{"_index":780,"title":{},"body":{"components/TabsPage.html":{}}}],["this.push.regist",{"_index":714,"title":{},"body":{"injectables/StartupService.html":{}}}],["this.pushobject",{"_index":678,"title":{},"body":{"injectables/PushService.html":{}}}],["this.pushobject.on('notif",{"_index":684,"title":{},"body":{"injectables/PushService.html":{}}}],["this.pushobject.on('registr",{"_index":681,"title":{},"body":{"injectables/PushService.html":{}}}],["this.setfromgroup",{"_index":410,"title":{},"body":{"components/EventScreen.html":{}}}],["this.setlistitem(emptytodo",{"_index":417,"title":{},"body":{"components/EventScreen.html":{}}}],["this.setlistitem(i",{"_index":416,"title":{},"body":{"components/EventScreen.html":{}}}],["this.setupform",{"_index":126,"title":{},"body":{"components/AddScreen.html":{}}}],["this.splashscreen.hid",{"_index":723,"title":{},"body":{"injectables/StartupService.html":{}}}],["this.start.init",{"_index":642,"title":{},"body":{"components/NevillsApp.html":{}}}],["this.statusbar.stylelightcont",{"_index":722,"title":{},"body":{"injectables/StartupService.html":{}}}],["this.tabref.select(1).then",{"_index":791,"title":{},"body":{"components/TabsPage.html":{}}}],["this.tabs.select(1",{"_index":198,"title":{},"body":{"components/AddScreen.html":{}}}],["this.translate.addlangs(this.config.languag",{"_index":737,"title":{},"body":{"injectables/StartupService.html":{}}}],["this.translate.get(['cancel",{"_index":578,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.translate.get(['clos",{"_index":784,"title":{},"body":{"components/TabsPage.html":{}}}],["this.translate.get(['delet",{"_index":433,"title":{},"body":{"components/EventScreen.html":{},"components/ListScreen.html":{}}}],["this.translate.get(['error",{"_index":730,"title":{},"body":{"injectables/StartupService.html":{}}}],["this.translate.get(['sav",{"_index":169,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{}}}],["this.translate.onlangchange.subscribe((ev",{"_index":353,"title":{},"body":{"components/CalendarScreen.html":{}}}],["this.translate.setdefaultlang(this.config.default_languag",{"_index":738,"title":{},"body":{"injectables/StartupService.html":{}}}],["this.translate.use(key",{"_index":588,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.translate.use(this.config.default_language).topromis",{"_index":739,"title":{},"body":{"injectables/StartupService.html":{}}}],["this.uccalendar.fullcalendar",{"_index":346,"title":{},"body":{"components/CalendarScreen.html":{}}}],["this.uccalendar.fullcalendar('opt",{"_index":354,"title":{},"body":{"components/CalendarScreen.html":{}}}],["this.uccalendar.fullcalendar('renderev",{"_index":348,"title":{},"body":{"components/CalendarScreen.html":{}}}],["throw",{"_index":711,"title":{},"body":{"injectables/StartupService.html":{}}}],["time",{"_index":84,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"injectables/EventsService.html":{},"miscellaneous/functions.html":{},"interfaces/iEvent.html":{},"interfaces/iTodo.html":{}}}],["timestamp",{"_index":496,"title":{},"body":{"injectables/EventsService.html":{}}}],["timevalid",{"_index":111,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["timevalidator('start",{"_index":146,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{}}}],["timevalidator(datefieldkey",{"_index":881,"title":{},"body":{"miscellaneous/functions.html":{}}}],["titl",{"_index":137,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"injectables/StartupService.html":{},"components/TabsPage.html":{},"interfaces/iEvent.html":{},"interfaces/iTodo.html":{}}}],["todolist",{"_index":204,"title":{},"body":{"components/AddScreen.html":{}}}],["token",{"_index":671,"title":{},"body":{"injectables/PushService.html":{},"injectables/StartupService.html":{},"interfaces/iEvent.html":{},"interfaces/iTodo.html":{}}}],["toolbox",{"_index":874,"title":{},"body":{"dependencies.html":{}}}],["tostr",{"_index":504,"title":{},"body":{"injectables/EventsService.html":{}}}],["tranlsat",{"_index":698,"title":{},"body":{"injectables/StartupService.html":{}}}],["transform",{"_index":644,"title":{},"body":{"pipes/OutdatedPipe.html":{}}}],["transform(valu",{"_index":645,"title":{},"body":{"pipes/OutdatedPipe.html":{}}}],["translat",{"_index":36,"title":{},"body":{"components/AddScreen.html":{},"modules/AppModule.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"injectables/StartupService.html":{},"components/TabsPage.html":{},"miscellaneous/functions.html":{}}}],["translate/cor",{"_index":102,"title":{},"body":{"components/AddScreen.html":{},"modules/AppModule.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"injectables/StartupService.html":{},"components/TabsPage.html":{},"dependencies.html":{}}}],["translate/http",{"_index":257,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["translatehttpload",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["translatehttploader(http",{"_index":293,"title":{},"body":{"modules/AppModule.html":{}}}],["translateload",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["translatemodul",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["translatemodule.forroot",{"_index":296,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservic",{"_index":37,"title":{},"body":{"components/AddScreen.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"injectables/StartupService.html":{},"components/TabsPage.html":{}}}],["translatesubscript",{"_index":168,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"injectables/StartupService.html":{},"components/TabsPage.html":{}}}],["translatesubscription.unsubscrib",{"_index":181,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"injectables/StartupService.html":{},"components/TabsPage.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AddScreen.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"components/NevillsApp.html":{},"components/TabsPage.html":{}}}],["true",{"_index":350,"title":{},"body":{"components/CalendarScreen.html":{},"components/EventScreen.html":{}}}],["true}).then(_",{"_index":547,"title":{},"body":{"injectables/EventsService.html":{}}}],["two",{"_index":339,"title":{},"body":{"components/CalendarScreen.html":{}}}],["type",{"_index":54,"title":{},"body":{"components/AddScreen.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"injectables/EventsService.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"components/NevillsApp.html":{},"pipes/OutdatedPipe.html":{},"injectables/PushService.html":{},"injectables/StartupService.html":{},"components/TabsPage.html":{},"coverage.html":{},"interfaces/iEvent.html":{},"interfaces/iTodo.html":{},"miscellaneous/variables.html":{}}}],["uccalendar",{"_index":309,"title":{},"body":{"components/CalendarScreen.html":{}}}],["ui",{"_index":436,"title":{},"body":{"components/EventScreen.html":{}}}],["uniqu",{"_index":465,"title":{},"body":{"injectables/EventsService.html":{}}}],["unreach",{"_index":407,"title":{},"body":{"components/EventScreen.html":{}}}],["unsubscrib",{"_index":359,"title":{},"body":{"components/CalendarScreen.html":{},"components/EventScreen.html":{},"components/ListScreen.html":{},"components/TabsPage.html":{}}}],["up",{"_index":486,"title":{},"body":{"injectables/EventsService.html":{},"injectables/PushService.html":{},"injectables/StartupService.html":{}}}],["updat",{"_index":127,"title":{},"body":{"components/AddScreen.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"injectables/EventsService.html":{},"components/ListScreen.html":{},"components/TabsPage.html":{}}}],["useclass",{"_index":302,"title":{},"body":{"modules/AppModule.html":{}}}],["usefactori",{"_index":297,"title":{},"body":{"modules/AppModule.html":{}}}],["valid",{"_index":86,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"miscellaneous/functions.html":{}}}],["validators.requir",{"_index":138,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{}}}],["validators/time.valid",{"_index":112,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{}}}],["valu",{"_index":160,"title":{},"body":{"components/AddScreen.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"injectables/EventsService.html":{},"components/ListScreen.html":{},"components/NevillsApp.html":{},"pipes/OutdatedPipe.html":{},"injectables/PushService.html":{},"components/TabsPage.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":212,"title":{},"body":{"components/AddScreen.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"components/NevillsApp.html":{},"components/TabsPage.html":{}}}],["variabl",{"_index":393,"title":{"miscellaneous/variables.html":{}},"body":{"components/EventScreen.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["viewchild",{"_index":332,"title":{},"body":{"components/CalendarScreen.html":{},"components/TabsPage.html":{}}}],["viewchild('navtab",{"_index":765,"title":{},"body":{"components/TabsPage.html":{}}}],["viewchild(calendarcompon",{"_index":330,"title":{},"body":{"components/CalendarScreen.html":{}}}],["void",{"_index":60,"title":{},"body":{"components/AddScreen.html":{},"components/CalendarScreen.html":{},"components/EventScreen.html":{},"components/HeaderComponent.html":{},"components/ListScreen.html":{},"injectables/PushService.html":{},"injectables/StartupService.html":{},"components/TabsPage.html":{}}}],["wait']).subscribe(t",{"_index":171,"title":{},"body":{"components/AddScreen.html":{},"components/EventScreen.html":{},"components/ListScreen.html":{}}}],["web",{"_index":471,"title":{},"body":{"injectables/EventsService.html":{},"injectables/PushService.html":{}}}],["webview",{"_index":855,"title":{},"body":{"dependencies.html":{}}}],["whitelist",{"_index":859,"title":{},"body":{"dependencies.html":{}}}],["window['cordova",{"_index":675,"title":{},"body":{"injectables/PushService.html":{},"injectables/StartupService.html":{}}}],["window['pushnotif",{"_index":676,"title":{},"body":{"injectables/PushService.html":{}}}],["window['pushnotification'].init(this.config.pushopt",{"_index":679,"title":{},"body":{"injectables/PushService.html":{}}}],["wrong",{"_index":408,"title":{},"body":{"components/EventScreen.html":{},"injectables/StartupService.html":{}}}],["yyyi",{"_index":142,"title":{},"body":{"components/AddScreen.html":{}}}],["zone.j",{"_index":876,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AddScreen.html":{"url":"components/AddScreen.html","title":"component - AddScreen","body":"\n                   \n\n\n\n\n\n  Components\n  AddScreen\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/pages/add/add.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                add\n            \n\n\n\n\n            \n                templateUrl\n                add.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addEventForm\n                            \n                            \n                                    Public\n                                dummyPhoto\n                            \n                            \n                                    Private\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEvent\n                            \n                            \n                                addListItem\n                            \n                            \n                                initItem\n                            \n                            \n                                ionViewWillEnter\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeListItem\n                            \n                            \n                                setupForm\n                            \n                            \n                                takePhoto\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(config: Config, camera: Camera, translate: TranslateService, eventService: EventsService, alertCtrl: AlertController, loading: LoadingController, tabs: Tabs, cd: ChangeDetectorRef, formBuilder: FormBuilder, datepipe: DatePipe)\n                    \n                \n                        \n                            \n                                Defined in src/pages/add/add.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    Config\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        camera\n                                                  \n                                                        \n                                                                    Camera\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventService\n                                                  \n                                                        \n                                                                    EventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertCtrl\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loading\n                                                  \n                                                        \n                                                                    LoadingController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tabs\n                                                  \n                                                        \n                                                                    Tabs\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        datepipe\n                                                  \n                                                        \n                                                                    DatePipe\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \naddEvent()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/add/add.ts:107\n                            \n                        \n\n\n                \n                    \n                            Add event with alert prompt\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addListItem\n                            \n                            \n                        \n                    \n                \n                \n                    \naddListItem()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/add/add.ts:76\n                            \n                        \n\n\n                \n                    \n                            Add list item form group to list control\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initItem\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitItem()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/add/add.ts:69\n                            \n                        \n\n\n                \n                    \n                            Create new empty list item\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    List item form group with empty fields\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ionViewWillEnter\n                            \n                            \n                        \n                    \n                \n                \n                    \nionViewWillEnter()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/add/add.ts:46\n                            \n                        \n\n\n                \n                    \n                            Clear form on every component load\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/add/add.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeListItem\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveListItem(i: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/add/add.ts:86\n                            \n                        \n\n\n                \n                    \n                            Remove list item from list\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        i\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Item index in list array\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setupForm\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetupForm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/add/add.ts:54\n                            \n                        \n\n\n                \n                    \n                            Create dynamic form with extendable list and time custom validator\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            takePhoto\n                            \n                            \n                        \n                    \n                \n                \n                    \ntakePhoto()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/add/add.ts:95\n                            \n                        \n\n\n                \n                    \n                            Take photo from camera and pass saved path on device to form field\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            addEventForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        addEventForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/add/add.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dummyPhoto\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dummyPhoto:     String\n\n                    \n                \n                    \n                        \n                            Type :     String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/add/add.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            options\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        options:     CameraOptions\n\n                    \n                \n                    \n                        \n                            Type :     CameraOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/add/add.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit, ChangeDetectorRef} from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\nimport {DatePipe} from '@angular/common';\nimport {FormGroup,FormArray,FormBuilder,Validators} from '@angular/forms';\nimport {AlertController, LoadingController, Tabs} from 'ionic-angular';\nimport {Camera, CameraOptions} from '@ionic-native/camera';\nimport {EventsService} from '../../services/events.service';\nimport {Config} from '../../config.service';\nimport {timeValidator} from \"../../validators/time.validator\";\nimport {emptyTodo} from \"../../interfaces/event.interface\";\n\n@Component({\n  selector: 'add',\n  templateUrl: 'add.html'\n})\nexport class AddScreen implements OnInit {\n\n  // Dummy photo hex from config for photo placeholder\n  public dummyPhoto: String;\n  private options: CameraOptions;\n  private addEventForm: FormGroup;\n\n  constructor(private config: Config,\n              private camera: Camera,\n              private translate: TranslateService,\n              private eventService: EventsService,\n              private alertCtrl: AlertController,\n              private loading: LoadingController,\n              private tabs:Tabs,\n              private cd: ChangeDetectorRef,\n              private formBuilder: FormBuilder,\n              private datepipe: DatePipe) {\n    this.dummyPhoto = this.config.DUMMY_PHOTO_HASH;\n    this.options = this.config.CAMERA_OPTIONS;\n  }\n\n  ngOnInit() {\n    this.setupForm();\n    // Update validator for time field to disable adding outdated event\n    setInterval(()=> { this.addEventForm.controls['time'].updateValueAndValidity(); }, this.config.INTERVAL);\n  }\n\n  /**\n   * Clear form on every component load\n   */\n  ionViewWillEnter() {\n    this.setupForm();\n    this.cd.detectChanges();\n  }\n\n  /**\n   * Create dynamic form with extendable list and time custom validator\n   */\n  setupForm() {\n    this.addEventForm = this.formBuilder.group({\n      title: ['', Validators.required],\n      description: ['', Validators.required],\n      start: [this.datepipe.transform(new Date(), 'yyyy-MM-dd'), [Validators.required]],\n      time: [this.datepipe.transform(new Date(), 'HH:mm'), [Validators.required, timeValidator('start')]],\n      photo: [null],\n      list: this.formBuilder.array([this.initItem()])\n    });\n  }\n\n  /**\n   * Create new empty list item\n   * @returns {FormGroup} List item form group with empty fields\n   */\n  initItem() {\n    return this.formBuilder.group(emptyTodo);\n  }\n\n  /**\n   * Add list item form group to list control\n   */\n  addListItem() {\n    const control =  this.addEventForm.controls['list'];\n    control.push(this.initItem());\n    this.cd.detectChanges();\n  }\n\n  /**\n   * Remove list item from list\n   * @param {number} i Item index in list array\n   */\n  removeListItem(i: number) {\n    const control =  this.addEventForm.controls['list'];\n    control.removeAt(i);\n    this.cd.detectChanges();\n  }\n\n  /**\n   * Take photo from camera and pass saved path on device to form field\n   */\n  takePhoto() {\n    if(window['cordova']) {\n      this.camera.getPicture(this.options).then((imageData) => {\n        this.addEventForm.controls['photo'].patchValue(imageData);\n        this.cd.detectChanges();\n      });\n    }\n  }\n\n  /**\n   * Add event with alert prompt\n   */\n  addEvent() {\n    // Deep copy form value to avoid closures\n    let event = {...this.addEventForm.value};\n    // Check errors\n    if(!this.addEventForm.errors) {\n      // Get translations by keys\n      const translateSubscription = this.translate.get(['save', 'add', 'check', 'cancel', 'wait']).subscribe(t => {\n        const prompt = this.alertCtrl.create({\n          title: t.add + ' ' + event.title + '?',\n          message: t.check,\n          buttons: [\n            {\n              text: t.cancel,\n              handler: () => {\n                translateSubscription.unsubscribe();\n              }\n            },\n            {\n              text: t.add,\n              handler: () => {\n                let loader = this.loading.create({\n                  content: t.wait\n                });\n                loader.present();\n                translateSubscription.unsubscribe();\n                // Push new event to backend and local data, clean form and open tab with events list after promise fulfilled\n                this.eventService.push(event).then(_ => {\n                  this.addEventForm.reset();\n                  loader.dismiss();\n                  this.tabs.select(1);\n                }, (err) => {\n                  loader.dismiss();\n                  console.log('add event error', err);\n                });\n              }\n            }\n          ]\n        });\n        prompt.present();\n      });\n    } else {\n      console.log('FORM ERROR', this.addEventForm.errors)\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      {{'todolist' | translate}}\n      \n        \n          \n            \n            \n              \n            \n          \n        \n      \n      {{'additem' | translate}}\n    \n    \n      \n        {{'start' | translate}}\n        \n      \n      \n        {{'time' | translate}}\n        \n      \n      \n        \n        \n          \n            {{'addphoto' | translate}}\n            {{'changephoto' | translate}}\n          \n        \n      \n    \n    {{'add' | translate}}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                    {{\\'todolist\\' | translate}}                                                                                                        {{\\'additem\\' | translate}}                      {{\\'start\\' | translate}}                            {{\\'time\\' | translate}}                                                          {{\\'addphoto\\' | translate}}            {{\\'changephoto\\' | translate}}                                {{\\'add\\' | translate}}  '\n    var COMPONENTS = [{'name': 'AddScreen', 'selector': 'add'},{'name': 'CalendarScreen', 'selector': 'calendar'},{'name': 'EventScreen', 'selector': 'event'},{'name': 'HeaderComponent', 'selector': 'header-component'},{'name': 'ListScreen', 'selector': 'list'},{'name': 'NevillsApp', 'selector': ''},{'name': 'TabsPage', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddScreen'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAddScreen\n\nAddScreen\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddScreen->AppModule\n\n\n\n\n\nCalendarScreen\n\nCalendarScreen\n\nAppModule -->\n\nCalendarScreen->AppModule\n\n\n\n\n\nEventScreen\n\nEventScreen\n\nAppModule -->\n\nEventScreen->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nListScreen\n\nListScreen\n\nAppModule -->\n\nListScreen->AppModule\n\n\n\n\n\nNevillsApp\n\nNevillsApp\n\nAppModule -->\n\nNevillsApp->AppModule\n\n\n\n\n\nOutdatedPipe\n\nOutdatedPipe\n\nAppModule -->\n\nOutdatedPipe->AppModule\n\n\n\n\n\nTabsPage\n\nTabsPage\n\nAppModule -->\n\nTabsPage->AppModule\n\n\n\n\n\nIonicApp \n\nIonicApp \n\nIonicApp  -->\n\nAppModule->IonicApp \n\n\n\n\n\nConfig\n\nConfig\n\nAppModule -->\n\nConfig->AppModule\n\n\n\n\n\nEventsService\n\nEventsService\n\nAppModule -->\n\nEventsService->AppModule\n\n\n\n\n\nHttpService\n\nHttpService\n\nAppModule -->\n\nHttpService->AppModule\n\n\n\n\n\nPushService\n\nPushService\n\nAppModule -->\n\nPushService->AppModule\n\n\n\n\n\nStartupService\n\nStartupService\n\nAppModule -->\n\nStartupService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AddScreen\n                            \n                            \n                                CalendarScreen\n                            \n                            \n                                EventScreen\n                            \n                            \n                                HeaderComponent\n                            \n                            \n                                ListScreen\n                            \n                            \n                                NevillsApp\n                            \n                            \n                                OutdatedPipe\n                            \n                            \n                                TabsPage\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                AddScreen\n                            \n                            \n                                CalendarScreen\n                            \n                            \n                                EventScreen\n                            \n                            \n                                HeaderComponent\n                            \n                            \n                                ListScreen\n                            \n                            \n                                NevillsApp\n                            \n                            \n                                TabsPage\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     Config\n                            \n                            \n                                     EventsService\n                            \n                            \n                                     HttpService\n                            \n                            \n                                     PushService\n                            \n                            \n                                     StartupService\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                IonicApp\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import {NgModule, ErrorHandler} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {TranslateModule, TranslateLoader} from '@ngx-translate/core';\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\nimport {HttpClientModule, HttpClient} from '@angular/common/http';\nimport {FullCalendarModule} from 'ng-fullcalendar';\nimport {DatePipe} from '@angular/common';\n\nimport {IonicApp, IonicModule, IonicErrorHandler} from 'ionic-angular';\nimport {IonicStorageModule} from '@ionic/storage';\nimport {StatusBar} from '@ionic-native/status-bar';\nimport {SplashScreen} from '@ionic-native/splash-screen';\nimport {Camera} from '@ionic-native/camera';\nimport {File} from '@ionic-native/file';\nimport {Autostart} from '@ionic-native/autostart';\nimport {Keyboard} from '@ionic-native/keyboard';\n\nimport {NevillsApp} from './app.component';\n\nimport {HeaderComponent} from '../components/header/header';\n\nimport {ListScreen} from '../pages/list/list';\nimport {CalendarScreen} from '../pages/calendar/calendar';\nimport {AddScreen} from '../pages/add/add';\nimport {EventScreen} from '../pages/event/event';\nimport {TabsPage} from '../pages/tabs/tabs';\n\nimport {StartupService} from '../services/startup.service';\nimport {EventsService} from '../services/events.service';\nimport {HttpService} from '../services/http.service';\nimport {PushService} from \"../services/push.service\";\nimport {Config} from '../config.service';\n\nimport {OutdatedPipe} from '../pipes/outdated';\n\n/**\n * Translation setup\n */\nexport function createTranslateLoader(http: HttpClient) {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n\n@NgModule({\n  declarations: [\n    NevillsApp,\n    ListScreen,\n    CalendarScreen,\n    AddScreen,\n    EventScreen,\n    TabsPage,\n    HeaderComponent,\n    OutdatedPipe\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FullCalendarModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: (createTranslateLoader),\n        deps: [HttpClient]\n      }\n    }),\n    IonicModule.forRoot(NevillsApp),\n    IonicStorageModule.forRoot()\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    NevillsApp,\n    ListScreen,\n    CalendarScreen,\n    AddScreen,\n    EventScreen,\n    TabsPage,\n    HeaderComponent\n  ],\n  providers: [\n    HttpClient,\n    Camera,\n    Autostart,\n    File,\n    Keyboard,\n    StatusBar,\n    SplashScreen,\n    DatePipe,\n    StartupService,\n    EventsService,\n    HttpService,\n    PushService,\n    Config,\n    {provide: ErrorHandler, useClass: IonicErrorHandler}\n  ]\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CalendarScreen.html":{"url":"components/CalendarScreen.html","title":"component - CalendarScreen","body":"\n                   \n\n\n\n\n\n  Components\n  CalendarScreen\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/pages/calendar/calendar.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                calendar\n            \n\n\n\n\n            \n                templateUrl\n                calendar.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _subscriptions\n                            \n                            \n                                calendarOptions\n                            \n                            \n                                ucCalendar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clickEvent\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(config: Config, nav: NavController, translate: TranslateService, eventService: EventsService)\n                    \n                \n                        \n                            \n                                Defined in src/pages/calendar/calendar.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    Config\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nav\n                                                  \n                                                        \n                                                                    NavController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventService\n                                                  \n                                                        \n                                                                    EventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clickEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \nclickEvent(event: iEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/calendar/calendar.ts:55\n                            \n                        \n\n\n                \n                    \n                            Open event page on click by id\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    iEvent\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/calendar/calendar.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/calendar/calendar.ts:34\n                            \n                        \n\n\n                \n                    \n                            Setup and subscribe to data after component init\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _subscriptions:     ISubscription[]\n\n                    \n                \n                    \n                        \n                            Type :     ISubscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/calendar/calendar.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            calendarOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        calendarOptions:     Options\n\n                    \n                \n                    \n                        \n                            Type :     Options\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/calendar/calendar.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ucCalendar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ucCalendar:     CalendarComponent\n\n                    \n                \n                    \n                        \n                            Type :     CalendarComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(CalendarComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/pages/calendar/calendar.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, ViewChild, OnInit, OnDestroy} from '@angular/core';\nimport {NavController} from 'ionic-angular';\nimport {TranslateService, LangChangeEvent} from '@ngx-translate/core';\nimport {CalendarComponent} from 'ng-fullcalendar';\nimport {Options} from 'fullcalendar';\nimport {ISubscription} from 'rxjs/Subscription';\nimport {EventsService} from '../../services/events.service';\nimport {iEvent} from '../../interfaces/event.interface';\nimport {Config} from '../../config.service';\nimport {EventScreen} from '../event/event';\n\n@Component({\n  selector: 'calendar',\n  templateUrl: 'calendar.html'\n})\nexport class CalendarScreen implements OnInit, OnDestroy {\n\n  calendarOptions: Options;\n  @ViewChild(CalendarComponent) ucCalendar: CalendarComponent;\n\n  // Array for subscriptions\n  private _subscriptions: ISubscription[] = [];\n\n  constructor(private config: Config,\n              private nav: NavController,\n              private translate: TranslateService,\n              private eventService: EventsService\n  ) {\n  }\n\n  /**\n   * Setup and subscribe to data after component init\n   */\n  ngOnInit() {\n    // Setup calendar from config and fill with events with deep copy and concat of two objects\n    this.calendarOptions = {...this.config.CALENDAR_CONFIG, ...{events: this.eventService.get()}};\n\n    // Subscribe for update events\n    const eventsSub = this.eventService.onEventsChange.subscribe((evts: Array) => {\n      this.ucCalendar.fullCalendar( 'removeEvents' );\n      this.ucCalendar.fullCalendar('renderEvents', evts, true);\n    });\n    // Subscribe for change locale\n    const localeSub = this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\n     this.ucCalendar.fullCalendar('option', 'locale', event.lang);\n    });\n    this._subscriptions.push(eventsSub, localeSub);\n\n  }\n\n  /**\n   * Open event page on click by id\n   * @param {iEvent} event\n   */\n  clickEvent(event: iEvent) {\n    this.nav.push(EventScreen, { id: event.id });\n  }\n\n  ngOnDestroy() {\n    // Unsubscribe from all subscriptions\n    this._subscriptions.map(subscription => subscription.unsubscribe());\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AddScreen', 'selector': 'add'},{'name': 'CalendarScreen', 'selector': 'calendar'},{'name': 'EventScreen', 'selector': 'event'},{'name': 'HeaderComponent', 'selector': 'header-component'},{'name': 'ListScreen', 'selector': 'list'},{'name': 'NevillsApp', 'selector': ''},{'name': 'TabsPage', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CalendarScreen'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EventScreen.html":{"url":"components/EventScreen.html","title":"component - EventScreen","body":"\n                   \n\n\n\n\n\n  Components\n  EventScreen\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/pages/event/event.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                event\n            \n\n\n\n\n            \n                templateUrl\n                event.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _subscriptions\n                            \n                            \n                                    Public\n                                dummyPhoto\n                            \n                            \n                                    Public\n                                edit\n                            \n                            \n                                    Private\n                                editEventForm\n                            \n                            \n                                    Public\n                                event\n                            \n                            \n                                    Private\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addListItem\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                popEvent\n                            \n                            \n                                removeListItem\n                            \n                            \n                                saveEvent\n                            \n                            \n                                setEdit\n                            \n                            \n                                setFromGroup\n                            \n                            \n                                setListItem\n                            \n                            \n                                switchTodoListItem\n                            \n                            \n                                takePhoto\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loading: LoadingController, translate: TranslateService, config: Config, camera: Camera, eventService: EventsService, alertCtrl: AlertController, params: NavParams, nav: NavController, cd: ChangeDetectorRef, formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/pages/event/event.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loading\n                                                  \n                                                        \n                                                                    LoadingController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    Config\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        camera\n                                                  \n                                                        \n                                                                    Camera\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventService\n                                                  \n                                                        \n                                                                    EventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertCtrl\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        params\n                                                  \n                                                        \n                                                                    NavParams\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nav\n                                                  \n                                                        \n                                                                    NavController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addListItem\n                            \n                            \n                        \n                    \n                \n                \n                    \naddListItem()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/event/event.ts:98\n                            \n                        \n\n\n                \n                    \n                            Add list item form group to list control\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/event/event.ts:215\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/event/event.ts:52\n                            \n                        \n\n\n                \n                    \n                            Get event by id on component init\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            popEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \npopEvent()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/event/event.ts:141\n                            \n                        \n\n\n                \n                    \n                            Delete event with prompt\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeListItem\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveListItem(i: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/event/event.ts:108\n                            \n                        \n\n\n                \n                    \n                            Remove list item from list\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        i\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Item index in list array\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveEvent()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/event/event.ts:177\n                            \n                        \n\n\n                \n                    \n                            Update event with new data with prompt\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setEdit\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetEdit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/event/event.ts:65\n                            \n                        \n\n\n                \n                    \n                            Change edit / info screen info\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setFromGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetFromGroup()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/event/event.ts:73\n                            \n                        \n\n\n                \n                    \n                            Create dynamic form with extendable list and time custom validator and fill with event data\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setListItem\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetListItem(line: iTodo)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/event/event.ts:91\n                            \n                        \n\n\n                \n                    \n                            Set list item group with saved data from event\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        line\n                                                        \n                                                                    iTodo\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Item object\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    Form group for list control\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            switchTodoListItem\n                            \n                            \n                        \n                    \n                \n                \n                    \nswitchTodoListItem(i: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/event/event.ts:118\n                            \n                        \n\n\n                \n                    \n                            Reflect checked flag variable on click\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        i\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Item index in list array\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            takePhoto\n                            \n                            \n                        \n                    \n                \n                \n                    \ntakePhoto()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/event/event.ts:129\n                            \n                        \n\n\n                \n                    \n                            Take photo from camera and pass saved path on device to form field\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _subscriptions:     ISubscription[]\n\n                    \n                \n                    \n                        \n                            Type :     ISubscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/event/event.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dummyPhoto\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dummyPhoto:     String\n\n                    \n                \n                    \n                        \n                            Type :     String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/event/event.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            edit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        edit:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/event/event.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            editEventForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editEventForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/event/event.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            event\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        event:     iEvent\n\n                    \n                \n                    \n                        \n                            Type :     iEvent\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/event/event.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            options\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        options:     CameraOptions\n\n                    \n                \n                    \n                        \n                            Type :     CameraOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/event/event.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit, ChangeDetectorRef, OnDestroy} from '@angular/core';\nimport {FormGroup,FormArray,FormBuilder,Validators} from '@angular/forms';\nimport {TranslateService} from '@ngx-translate/core';\nimport {AlertController, NavParams, NavController, LoadingController} from 'ionic-angular';\nimport {ISubscription} from 'rxjs/Subscription';\nimport {Camera, CameraOptions} from '@ionic-native/camera';\nimport {EventsService} from '../../services/events.service';\nimport {iEvent, iTodo, emptyTodo} from '../../interfaces/event.interface';\nimport {Config} from '../../config.service';\nimport {timeValidator} from \"../../validators/time.validator\";\n\n@Component({\n  selector: 'event',\n  templateUrl: 'event.html'\n})\nexport class EventScreen implements OnInit, OnDestroy {\n\n  // Dummy photo hex from config for photo placeholder\n  public dummyPhoto: String;\n\n  public event: iEvent;\n  public edit = false;\n  private options: CameraOptions;\n  private editEventForm: FormGroup;\n\n  // Array for subscriptions\n  private _subscriptions: ISubscription[] = [];\n\n  constructor(private loading: LoadingController,\n              private translate: TranslateService,\n              private config: Config,\n              private camera: Camera,\n              private eventService: EventsService,\n              private alertCtrl: AlertController,\n              private params: NavParams,\n              private nav: NavController,\n              private cd: ChangeDetectorRef,\n              private formBuilder: FormBuilder,\n  ) {\n    this.dummyPhoto = this.config.DUMMY_PHOTO_HASH;\n    this.options = this.config.CAMERA_OPTIONS;\n\n    const eventsSub = this.eventService.onEventsChange.subscribe(_ => {\n      this.nav.popToRoot();\n    });\n    this._subscriptions.push(eventsSub);\n  }\n\n  /**\n   * Get event by id on component init\n   */\n  ngOnInit() {\n    const id = this.params.get('id');\n    this.event = this.eventService.getEvent(id);\n    // Exit on unreachable data or wrong id\n    if(!this.event) this.nav.popToRoot();\n    this.setFromGroup();\n    // Update validator for time field to disable adding outdated event\n    setInterval(()=> { this.editEventForm.controls['time'].updateValueAndValidity(); }, this.config.INTERVAL);\n  }\n\n  /**\n   * Change edit / info screen info\n   */\n  setEdit() {\n    this.edit = true;\n    this.cd.detectChanges();\n  }\n\n  /**\n   * Create dynamic form with extendable list and time custom validator and fill with event data\n   */\n  setFromGroup() {\n    let evt = {...this.event};\n    let listArray = evt.list.length ? evt.list.map((i: iTodo) => this.setListItem(i)) : [this.setListItem(emptyTodo)];\n    this.editEventForm = this.formBuilder.group({\n      title: [evt.title, Validators.required],\n      description: [evt.description, Validators.required],\n      start: [evt.start, [Validators.required]],\n      time: [evt.time, [Validators.required, timeValidator('start')]],\n      photo: [evt.photo],\n      list: this.formBuilder.array(listArray)\n    });\n  }\n\n  /**\n   * Set list item group with saved data from event\n   * @param {iTodo} line Item object\n   * @returns {FormGroup} Form group for list control\n   */\n  setListItem(line: iTodo) {\n    return this.formBuilder.group(line);\n  }\n\n  /**\n   * Add list item form group to list control\n   */\n  addListItem() {\n    const control =  this.editEventForm.controls['list'];\n    control.push(this.setListItem(emptyTodo));\n    this.cd.detectChanges();\n  }\n\n  /**\n   * Remove list item from list\n   * @param {number} i Item index in list array\n   */\n  removeListItem(i: number) {\n    const control =  this.editEventForm.controls['list'];\n    control.removeAt(i);\n    this.cd.detectChanges();\n  }\n\n  /**\n   * Reflect checked flag variable on click\n   * @param {number} i Item index in list array\n   */\n  switchTodoListItem(i: number) {\n    const control =  this.editEventForm.controls['list'];\n    let itemValue: iTodo = {...control.value[i]};\n    itemValue.checked = !itemValue.checked;\n    control.at(i).patchValue(itemValue);\n    this.cd.detectChanges();\n  }\n\n  /**\n   * Take photo from camera and pass saved path on device to form field\n   */\n  takePhoto() {\n    if(window['cordova']) {\n      this.camera.getPicture(this.options).then((imageData) => {\n        this.editEventForm.controls['photo'].patchValue(imageData);\n        this.cd.detectChanges();\n      });\n    }\n  }\n\n  /**\n   * Delete event with prompt\n   */\n  popEvent() {\n    const translateSubscription = this.translate.get(['delete', 'check', 'cancel', 'wait']).subscribe(t => {\n      const prompt = this.alertCtrl.create({\n        title: t.delete + ' ' + this.event.title + '?',\n        message: t.check,\n        buttons: [\n          {\n            text: t.cancel,\n            handler: () => {\n              translateSubscription.unsubscribe();\n            }\n          },\n          {\n            text: t.delete,\n            handler: () => {\n              let loader = this.loading.create({\n                content: t.wait\n              });\n              loader.present();\n              // Delete event from backend and local data, update UI after promise fulfilled\n              this.eventService.pop(this.event).then(_ => {\n                loader.dismiss();\n                this.cd.detectChanges();\n              });\n              translateSubscription.unsubscribe();\n            }\n          }\n        ]\n      });\n      prompt.present();\n    });\n  }\n\n  /**\n   * Update event with new data with prompt\n   */\n  saveEvent() {\n    let event = {...this.editEventForm.value};\n    if(!this.editEventForm.errors) {\n      const translateSubscription = this.translate.get(['save', 'add', 'check', 'cancel', 'wait']).subscribe(t => {\n        const prompt = this.alertCtrl.create({\n          title:  t.save + ' ' + event.title + '?',\n          message: t.check,\n          buttons: [\n            {\n              text: t.cancel,\n              handler: () => {\n                translateSubscription.unsubscribe();\n              }\n            },\n            {\n              text: t.save,\n              handler: () => {\n                let loader = this.loading.create({\n                  content: t.wait\n                });\n                loader.present();\n                // Update event on backend and local data, clear form, update UI and events array after promise fulfilled\n                this.eventService.put(event, this.event).then(_ => {\n                  this.event = {...event};\n                  this.setFromGroup();\n                  loader.dismiss();\n                  this.cd.detectChanges();\n                  translateSubscription.unsubscribe();\n                });\n              }\n            }\n          ]\n        });\n        prompt.present();\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    // Unsubscribe from all subscriptions\n    this._subscriptions.map(subscription => subscription.unsubscribe());\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n           {{'edit' | translate}}\n        \n        \n           {{'delete' | translate}}\n        \n      \n    \n    \n      \n        {{event.title}}\n      \n    \n    \n      {{event.description}}\n    \n    \n      \n        {{i+1}}\n        {{item.description}}\n        \n      \n    \n    \n      {{'start' | translate}}: {{event.start}}\n      {{'time' | translate}}: {{event.time}}\n      \n        \n      \n    \n  \n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      {{'list' | translate}}\n      \n        \n          \n            \n            \n              \n            \n            \n              \n            \n          \n        \n      \n      {{'additem' | translate}}\n    \n    \n      \n        {{'start' | translate}}\n        \n      \n      \n        {{'time' | translate}}\n        \n      \n      \n        \n        \n          \n            {{'addphoto' | translate}}\n            {{'changephoto' | translate}}\n          \n        \n      \n    \n    {{'save' | translate}}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                               {{\\'edit\\' | translate}}                           {{\\'delete\\' | translate}}                                    {{event.title}}                    {{event.description}}                      {{i+1}}        {{item.description}}                            {{\\'start\\' | translate}}: {{event.start}}      {{\\'time\\' | translate}}: {{event.time}}                                                                                              {{\\'list\\' | translate}}                                                                                                                                              {{\\'additem\\' | translate}}                      {{\\'start\\' | translate}}                            {{\\'time\\' | translate}}                                                          {{\\'addphoto\\' | translate}}            {{\\'changephoto\\' | translate}}                                {{\\'save\\' | translate}}  '\n    var COMPONENTS = [{'name': 'AddScreen', 'selector': 'add'},{'name': 'CalendarScreen', 'selector': 'calendar'},{'name': 'EventScreen', 'selector': 'event'},{'name': 'HeaderComponent', 'selector': 'header-component'},{'name': 'ListScreen', 'selector': 'list'},{'name': 'NevillsApp', 'selector': ''},{'name': 'TabsPage', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EventScreen'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EventsService.html":{"url":"injectables/EventsService.html","title":"injectable - EventsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EventsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/events.service.ts\n        \n\n            \n                Description\n            \n            \n                Events service.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                events\n                            \n                            \n                                    Public\n                                onEventsChange\n                            \n                            \n                                    Public\n                                onEventsPushed\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                generateRandomId\n                            \n                            \n                                get\n                            \n                            \n                                getEvent\n                            \n                            \n                                init\n                            \n                            \n                                pop\n                            \n                            \n                                push\n                            \n                            \n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: Config, http: HttpService, file: File)\n                    \n                \n                        \n                            \n                                Defined in src/services/events.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    Config\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        file\n                                                  \n                                                        \n                                                                    File\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            generateRandomId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        generateRandomId()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/services/events.service.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/services/events.service.ts:203\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetEvent(id: String)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/services/events.service.ts:212\n                            \n                        \n\n\n                \n                    \n                            Getter for event object by unique id\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    String\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Event id\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    Event object from service stored array\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \ninit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/services/events.service.ts:40\n                            \n                        \n\n\n                \n                    \n                            Init function with read local stored events from file on device or local storage on debug web mode\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    Get events from ionic storage or set empty array\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pop\n                            \n                            \n                        \n                    \n                \n                \n                    \npop(event: iEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/services/events.service.ts:127\n                            \n                        \n\n\n                \n                    \n                            Delete event from backend and storage by datestamp and id\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    iEvent\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            push\n                            \n                            \n                        \n                    \n                \n                \n                    \npush(event: iEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/services/events.service.ts:87\n                            \n                        \n\n\n                \n                    \n                            Save new event on backed and in storage - file or local storage in debug\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    iEvent\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            put\n                            \n                            \n                        \n                    \n                \n                \n                    \nput(newevent: iEvent, oldevent: iEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/services/events.service.ts:157\n                            \n                        \n\n\n                \n                    \n                            Update event - delete old record and push new to backend and storage\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        newevent\n                                                        \n                                                                    iEvent\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Updated event object\n\n                                                        \n                                                \n                                                \n                                                        oldevent\n                                                        \n                                                                    iEvent\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Old event object for delete from backend by datestamp and id\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    Fulfilled then events successfully cleaned up and saved on backend and in storage\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            events\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        events:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/services/events.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onEventsChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onEventsChange:     EventEmitter>\n\n                    \n                \n                    \n                        \n                            Type :     EventEmitter>\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/services/events.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onEventsPushed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onEventsPushed:     EventEmitter\n\n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/services/events.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable, EventEmitter} from '@angular/core';\nimport {File} from '@ionic-native/file';\nimport {iEvent} from '../interfaces/event.interface';\nimport {HttpService} from './http.service'\nimport {Config} from '../config.service';\n\n/**\n * Events service.\n */\n@Injectable()\nexport class EventsService {\n\n  // Events array storage\n  public events: Array = [];\n  // Emitter for changes in events array notifying\n  public onEventsChange: EventEmitter> = new EventEmitter();\n  // Emitter for pass push event from tabs to list component\n  public onEventsPushed: EventEmitter = new EventEmitter();\n\n  constructor(private config: Config,\n              private http: HttpService,\n              private file: File) {\n  }\n\n  // Generate random id based on timestamp, random 4* digit and string shuffle\n  static generateRandomId() {\n    return ((new Date).getTime() + Math.floor(1000 + Math.random() * 9000))\n        .toString()\n        .split('')\n        .sort(function () {\n          return 0.5 - Math.random()\n        })\n        .join('');\n  }\n\n  /**\n   * Init function with read local stored events from file on device or local storage on debug web mode\n   * @returns {Promise} Get events from ionic storage or set empty array\n   */\n  init() {\n    return new Promise((res) => {\n      if(window['cordova']) {\n        this.file.checkFile(this.file.dataDirectory, this.config.filename).then((flag) => {\n          if(flag) {\n            // Read file after EOF reached in promise and set file data to events store\n            this.file.readAsText(this.file.dataDirectory, this.config.filename).then((data) => {\n              this.events = data ? JSON.parse(data) : [];\n              // Notify on events changed\n              this.onEventsChange.emit(this.events);\n              res();\n            }, (err) => {\n              console.log('file read error', err);\n              this.events = [];\n              // Notify on events changed\n              this.onEventsChange.emit(this.events);\n              res(this.events);\n            });\n          } else {\n            this.events = [];\n            // Notify on events changed\n            this.onEventsChange.emit(this.events);\n            res(this.events);\n          }\n        }, (err) => {\n          console.log('file check error', err);\n          this.events = [];\n          // Notify on events changed\n          this.onEventsChange.emit(this.events);\n          res(this.events);\n        });\n      } else {\n        // Get saved events from local storage in web debug mode\n        let events = localStorage.getItem(this.config.EVENTS_STORAGE_KEY);\n        this.events = events ? JSON.parse(events) : [];\n        // Notify on events changed\n        this.onEventsChange.emit(this.events);\n        res(this.events);\n      }\n    });\n  }\n\n  /**\n   * Save new event on backed and in storage - file or local storage in debug\n   * @param {iEvent} event\n   * @returns {Promise}\n   */\n  push(event: iEvent) {\n    return new Promise((res, rej) => {\n      // Extend event object data with generated id and datestamp from start and time params\n      const evt = {\n        ...Object.assign({}, event),\n        ...{\n          id: EventsService.generateRandomId(),\n          datestamp: new Date(event.start + ' ' + event.time).getTime().toString()\n        }\n      };\n      evt.list = evt.list.filter((e) => e && e.description);\n      evt.token = localStorage.getItem(this.config.STORAGE_FCM_TOKEN_KEY);\n      evt.id = evt.id + evt.token;\n      // Send event complete object to backend and update stored value on promise fulfilled\n      this.http.post(this.config.backend.host + this.config.backend.api.layer, evt).then( _ => {\n        this.events.push(evt);\n        if(window['cordova']) {\n          this.file.writeFile(this.file.dataDirectory, this.config.filename, JSON.stringify(this.events), {replace: true}).then(_ => {\n            // Notify on events changed\n            this.onEventsChange.emit(this.events);\n            res();\n          });\n        } else {\n          localStorage.setItem(this.config.EVENTS_STORAGE_KEY, JSON.stringify(this.events));\n          // Notify on events changed\n          this.onEventsChange.emit(this.events);\n          res();\n        }\n      }, (err) => {\n        console.log('http error post', err);\n        rej(err);\n      });\n    });\n  }\n\n  /**\n   * Delete event from backend and storage by datestamp and id\n   * @param {iEvent} event\n   * @returns {Promise}\n   */\n  pop(event: iEvent) {\n    return new Promise((res) => {\n      // Delete event from backend and from stored value on promise fulfilled\n      this.http.post(this.config.backend.host + this.config.backend.api.layer + 'delete', event).then( _ => {\n        this.events = this.events.filter(e => e.id !== event.id);\n        if(window['cordova']) {\n          this.file.writeFile(this.file.dataDirectory, this.config.filename, JSON.stringify(this.events), {replace: true}).then(_ => {\n            // Notify on events changed\n            this.onEventsChange.emit(this.events);\n            res();\n          });\n        } else {\n          localStorage.setItem(this.config.EVENTS_STORAGE_KEY, JSON.stringify(this.events));\n          // Notify on events changed\n          this.onEventsChange.emit(this.events);\n          res();\n        }\n      }, (err) => {\n        console.log('http error post', err);\n        res();\n      });\n    });\n  }\n\n  /**\n   * Update event - delete old record and push new to backend and storage\n   * @param {iEvent} newevent Updated event object\n   * @param {iEvent} oldevent Old event object for delete from backend by datestamp and id\n   * @returns {Promise} Fulfilled then events successfully cleaned up and saved on backend and in storage\n   */\n  put(newevent: iEvent, oldevent: iEvent) {\n    // Promise chain - delete from backend, update object data, push to backend and update stored value\n    return new Promise((res) => {\n      this.http.post(this.config.backend.host + this.config.backend.api.layer + 'delete', oldevent).then( _ => {\n        // Extend edited event with new params for backend saving\n        const evt = {\n          ...Object.assign({}, newevent),\n          ...{\n            id: EventsService.generateRandomId(),\n            datestamp: new Date(newevent.start + ' ' + newevent.time).getTime().toString()\n          }\n        };\n        evt.list = evt.list.filter((e) => e && e.description);\n        evt.token = localStorage.getItem(this.config.STORAGE_FCM_TOKEN_KEY);\n        evt.id = evt.id + evt.token;\n        this.http.post(this.config.backend.host + this.config.backend.api.layer, evt).then(_ => {\n          this.events = this.events.map((e) => {\n            if (e.id === oldevent.id) {\n              Object.assign(e, evt);\n            }\n            return e;\n          });\n          if(window['cordova']) {\n            this.file.writeFile(this.file.dataDirectory, this.config.filename, JSON.stringify(this.events), {replace: true}).then(_ => {\n              // Notify on events changed\n              this.onEventsChange.emit(this.events);\n              res();\n            });\n          } else {\n            localStorage.setItem(this.config.EVENTS_STORAGE_KEY, JSON.stringify(this.events));\n            // Notify on events changed\n            this.onEventsChange.emit(this.events);\n            res();\n          }\n        }, (err) => {\n          console.log('http error post', err);\n          res();\n        });\n      }, (err) => {\n        console.log('http error del', err);\n        res();\n      });\n    });\n  }\n\n  // Events array service stored getter\n  get() {\n    return this.events;\n  }\n\n  /**\n   * Getter for event object by unique id\n   * @param {String} id Event id\n   * @returns {iEvent} Event object from service stored array\n   */\n  getEvent(id: String) {\n    return this.events.find((e) => e.id === id);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/header/header.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                header-component\n            \n\n\n\n\n            \n                templateUrl\n                header.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                presentActionSheet\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(config: Config, translate: TranslateService, actionSheetCtrl: ActionSheetController)\n                    \n                \n                        \n                            \n                                Defined in src/components/header/header.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    Config\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actionSheetCtrl\n                                                  \n                                                        \n                                                                    ActionSheetController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        title\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/components/header/header.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            presentActionSheet\n                            \n                            \n                        \n                    \n                \n                \n                    \npresentActionSheet()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/components/header/header.ts:25\n                            \n                        \n\n\n                \n                    \n                            Show translatable locale selection menu by click on menu button\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\nimport {ActionSheetController} from 'ionic-angular';\nimport {Config} from '../../config.service';\n\n@Component({\n  selector: 'header-component',\n  templateUrl: 'header.html'\n})\nexport class HeaderComponent {\n\n  // Title locale key input for display in header with translation\n  @Input('title') title: string;\n\n  constructor(\n    private config: Config,\n    private translate: TranslateService,\n    private actionSheetCtrl: ActionSheetController) {\n\n  }\n\n  /**\n   * Show translatable locale selection menu by click on menu button\n   */\n  presentActionSheet() {\n    // Get translates by keys subscription\n    const translateSubscription = this.translate.get(['cancel', 'changelang', 'langs']).subscribe(t => {\n      // Create buttons array with callbacks\n      let buttons = [];\n      // Set language change buttons from config languages keys\n      for(let key of this.config.LANGUAGES) {\n        buttons.push({\n          text: t.langs[key],\n          handler: () => {\n            localStorage.setItem(this.config.LANG_KEY, key);\n            this.translate.use(key);\n            translateSubscription.unsubscribe();\n          }\n        });\n      }\n      // Add cancel button\n      buttons.push({\n        text: t.cancel,\n        role: 'cancel',\n        handler: () => {\n          translateSubscription.unsubscribe();\n        }\n      });\n      // Create and present prompt\n      const actionSheet = this.actionSheetCtrl.create({\n        title: t.changelang,\n        buttons: buttons\n      });\n      actionSheet.present();\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n      {{title}}\n    \n    \n      \n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{title}}                    '\n    var COMPONENTS = [{'name': 'AddScreen', 'selector': 'add'},{'name': 'CalendarScreen', 'selector': 'calendar'},{'name': 'EventScreen', 'selector': 'event'},{'name': 'HeaderComponent', 'selector': 'header-component'},{'name': 'ListScreen', 'selector': 'list'},{'name': 'NevillsApp', 'selector': ''},{'name': 'TabsPage', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListScreen.html":{"url":"components/ListScreen.html","title":"component - ListScreen","body":"\n                   \n\n\n\n\n\n  Components\n  ListScreen\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/pages/list/list.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                list\n            \n\n\n\n\n            \n                templateUrl\n                list.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _subscriptions\n                            \n                            \n                                    Public\n                                datestamp\n                            \n                            \n                                    Public\n                                dummyPhoto\n                            \n                            \n                                    Public\n                                events\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ionViewWillEnter\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openEvent\n                            \n                            \n                                popEvent\n                            \n                            \n                                    Private\n                                    Static\n                                sortEvents\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loading: LoadingController, translate: TranslateService, config: Config, eventService: EventsService, alertCtrl: AlertController, nav: NavController, cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/pages/list/list.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loading\n                                                  \n                                                        \n                                                                    LoadingController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    Config\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventService\n                                                  \n                                                        \n                                                                    EventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertCtrl\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nav\n                                                  \n                                                        \n                                                                    NavController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ionViewWillEnter\n                            \n                            \n                        \n                    \n                \n                \n                    \nionViewWillEnter()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/list/list.ts:64\n                            \n                        \n\n\n                \n                    \n                            Update events list on every component display on screen\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/list/list.ts:113\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/list/list.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenEvent(id: String)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/list/list.ts:109\n                            \n                        \n\n\n                \n                    \n                            Open event on event screen by id\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    String\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Event id to get event object from service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            popEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \npopEvent(event: iEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/list/list.ts:73\n                            \n                        \n\n\n                \n                    \n                            Delete event with prompt\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    iEvent\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Event full object to delete\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            sortEvents\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sortEvents(a: iEvent, b: iEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/list/list.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        a\n                                                        \n                                                                    iEvent\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        b\n                                                        \n                                                                    iEvent\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     0 | 1 | -1\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _subscriptions:     ISubscription[]\n\n                    \n                \n                    \n                        \n                            Type :     ISubscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/list/list.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            datestamp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        datestamp:     \n\n                    \n                \n                    \n                        \n                            Default value : new Date().setSeconds(0,0)\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/list/list.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dummyPhoto\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dummyPhoto:     String\n\n                    \n                \n                    \n                        \n                            Type :     String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/list/list.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            events\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        events:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/list/list.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, ChangeDetectorRef, OnInit, OnDestroy} from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\nimport {EventsService} from '../../services/events.service';\nimport {AlertController, NavController, LoadingController} from 'ionic-angular';\nimport {ISubscription} from 'rxjs/Subscription';\nimport {iEvent} from '../../interfaces/event.interface';\nimport {EventScreen} from '../event/event';\nimport {Config} from '../../config.service';\n\n@Component({\n  selector: 'list',\n  templateUrl: 'list.html'\n})\nexport class ListScreen implements OnInit, OnDestroy {\n\n  // Dummy photo hex from config for photo placeholder\n  public dummyPhoto: String;\n  public events:Array = [];\n  // Datestamp object for pipe check\n  public datestamp = new Date().setSeconds(0,0);\n\n  // Array for subscriptions\n  private _subscriptions: ISubscription[] = [];\n\n  constructor(private loading: LoadingController,\n              private translate: TranslateService,\n              private config: Config,\n              private eventService: EventsService,\n              private alertCtrl: AlertController,\n              private nav: NavController,\n              private cd: ChangeDetectorRef\n  ) {\n    this.dummyPhoto = this.config.DUMMY_PHOTO_HASH;\n    // Subscribe for special emitter from Tabs component to open push event page\n    const eventPushedSub = this.eventService.onEventsPushed.subscribe((id) => {\n      this.nav.popToRoot();\n      this.nav.push(EventScreen, {id: id});\n    });\n    this._subscriptions.push(eventPushedSub);\n  }\n\n  private static sortEvents(a: iEvent, b: iEvent) {\n    if (parseInt(a.datestamp) > parseInt(b.datestamp)) return -1;\n    else if (parseInt(a.datestamp)  {\n      this.events = evts.sort((a: iEvent, b: iEvent) =>  ListScreen.sortEvents(a,b));\n      this.cd.detectChanges();\n    });\n    this._subscriptions.push(eventsSub);\n    // Update datestamp object for outdated pipe check\n    setInterval(() => {\n      this.datestamp = new Date().setSeconds(0,0);\n      this.cd.detectChanges();\n    }, this.config.INTERVAL);\n  }\n\n  /**\n   * Update events list on every component display on screen\n   */\n  ionViewWillEnter() {\n    this.events = this.eventService.get().sort((a: iEvent, b: iEvent) =>  ListScreen.sortEvents(a,b));\n    this.cd.detectChanges();\n  }\n\n  /**\n   * Delete event with prompt\n   * @param {iEvent} event Event full object to delete\n   */\n  popEvent(event: iEvent) {\n    const translateSubscription = this.translate.get(['delete', 'check', 'cancel', 'wait']).subscribe(t => {\n      const prompt = this.alertCtrl.create({\n        title: t.delete + ' ' + event.title + '?',\n        message: t.check,\n        buttons: [\n          {\n            text: t.cancel,\n            handler: () => {\n              translateSubscription.unsubscribe();\n            }\n          },\n          {\n            text: t.delete,\n            handler: () => {\n              let loader = this.loading.create({\n                content: t.wait\n              });\n              loader.present();\n              // Delete event from backend and local data, dismiss loader after promise fulfilled\n              this.eventService.pop(event).then(_ => {\n                loader.dismiss();\n              });\n              translateSubscription.unsubscribe();\n            }\n          }\n        ]\n      });\n      prompt.present();\n    });\n  }\n\n  /**\n   * Open event on event screen by id\n   * @param {String} id Event id to get event object from service\n   */\n  openEvent(id: String) {\n    this.nav.push(EventScreen, { id: id });\n  }\n\n  ngOnDestroy() {\n    // Unsubscribe from all subscriptions\n    this._subscriptions.map(subscription => subscription.unsubscribe());\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n        \n      \n      \n        {{e.title}}\n        {{e.start}} {{e.time}}\n        {{e.description}}\n      \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                {{e.title}}        {{e.start}} {{e.time}}        {{e.description}}                  '\n    var COMPONENTS = [{'name': 'AddScreen', 'selector': 'add'},{'name': 'CalendarScreen', 'selector': 'calendar'},{'name': 'EventScreen', 'selector': 'event'},{'name': 'HeaderComponent', 'selector': 'header-component'},{'name': 'ListScreen', 'selector': 'list'},{'name': 'NevillsApp', 'selector': ''},{'name': 'TabsPage', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ListScreen'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NevillsApp.html":{"url":"components/NevillsApp.html","title":"component - NevillsApp","body":"\n                   \n\n\n\n\n\n  Components\n  NevillsApp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                app.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                rootPage\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(start: StartupService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        start\n                                                  \n                                                        \n                                                                    StartupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rootPage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rootPage:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : TabsPage\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {StartupService} from '../services/startup.service';\nimport {TabsPage} from '../pages/tabs/tabs';\n\n@Component({\n  templateUrl: 'app.html'\n})\nexport class NevillsApp {\n  rootPage: any = TabsPage;\n\n  constructor(private start: StartupService) {\n    // Run startup service function on application load\n    this.start.init();\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddScreen', 'selector': 'add'},{'name': 'CalendarScreen', 'selector': 'calendar'},{'name': 'EventScreen', 'selector': 'event'},{'name': 'HeaderComponent', 'selector': 'header-component'},{'name': 'ListScreen', 'selector': 'list'},{'name': 'NevillsApp', 'selector': ''},{'name': 'TabsPage', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NevillsApp'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/OutdatedPipe.html":{"url":"pipes/OutdatedPipe.html","title":"pipe - OutdatedPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  OutdatedPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/pipes/outdated.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        outdated\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: string, ...args: any[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pipes/outdated.ts:11\n                            \n                        \n\n\n                \n                    \n                            Compare number and parsed to int string for datestamp outdated check\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'outdated',\n})\n\nexport class OutdatedPipe implements PipeTransform {\n  /**\n   * Compare number and parsed to int string for datestamp outdated check\n   */\n  transform(value: string, ...args) {\n    return args[0] >= parseInt(value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PushService.html":{"url":"injectables/PushService.html","title":"injectable - PushService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PushService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/push.service.ts\n        \n\n            \n                Description\n            \n            \n                Push FCM service.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onPush\n                            \n                            \n                                    Public\n                                pushObject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                init\n                            \n                            \n                                notificate\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: Config, autostart: Autostart)\n                    \n                \n                        \n                            \n                                Defined in src/services/push.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    Config\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        autostart\n                                                  \n                                                        \n                                                                    Autostart\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \ninit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/services/push.service.ts:24\n                            \n                        \n\n\n                \n                    \n                            Init function - eneable autostart for baground push receive and configure push plugin\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notificate\n                            \n                            \n                        \n                    \n                \n                \n                    \nnotificate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/services/push.service.ts:51\n                            \n                        \n\n\n                \n                    \n                            Notify with emitter on push received from device\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            register\n                            \n                            \n                        \n                    \n                \n                \n                    \nregister()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/services/push.service.ts:36\n                            \n                        \n\n\n                \n                    \n                            Registration on FCM with setted up configuration to get FCM token\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    Fulfilled on FCM token received on device, set dummy token for web debug\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onPush\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onPush:     EventEmitter\n\n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/services/push.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pushObject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pushObject:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/services/push.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable, EventEmitter} from '@angular/core';\nimport {Autostart} from '@ionic-native/autostart';\nimport {Config} from '../config.service';\n\n/**\n * Push FCM service.\n */\n@Injectable()\nexport class PushService {\n\n  // Store object for push plugin with configured data initialization\n  public pushObject;\n  // Emitter for incoming push object\n  public onPush: EventEmitter = new EventEmitter();\n\n\n  constructor(private config: Config,\n              private autostart: Autostart) {\n  }\n\n  /**\n   * Init function - eneable autostart for baground push receive and configure push plugin\n   */\n  init() {\n    if (window['cordova'] && window['PushNotification']) {\n      this.autostart.enable();\n      this.pushObject = window['PushNotification'].init(this.config.pushOptions);\n      this.notificate();\n    }\n  }\n\n  /**\n   * Registration on FCM with setted up configuration to get FCM token\n   * @returns {Promise} Fulfilled on FCM token received on device, set dummy token for web debug\n   */\n  register() {\n    if (window['cordova'] && window['PushNotification']) {\n      return new Promise((res) => {\n        this.pushObject.on('registration', (data) => {\n          res(data.registrationId);\n        });\n      });\n    } else {\n      return new Promise((res) => res('browser'));\n    }\n  }\n\n  /**\n   * Notify with emitter on push received from device\n   */\n  notificate() {\n    this.pushObject.on('notification', data => {\n      console.log('Received a notification', data);\n      this.onPush.emit(data);\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StartupService.html":{"url":"injectables/StartupService.html","title":"injectable - StartupService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StartupService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/startup.service.ts\n        \n\n            \n                Description\n            \n            \n                Startup service.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                init\n                            \n                            \n                                    Public\n                                initTranslation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loading: LoadingController, statusBar: StatusBar, splashScreen: SplashScreen, keyboard: Keyboard, config: Config, platform: Platform, translate: TranslateService, events: EventsService, http: HttpService, push: PushService, alertCtrl: AlertController)\n                    \n                \n                        \n                            \n                                Defined in src/services/startup.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loading\n                                                  \n                                                        \n                                                                    LoadingController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        statusBar\n                                                  \n                                                        \n                                                                    StatusBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        splashScreen\n                                                  \n                                                        \n                                                                    SplashScreen\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        keyboard\n                                                  \n                                                        \n                                                                    Keyboard\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    Config\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        events\n                                                  \n                                                        \n                                                                    EventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        push\n                                                  \n                                                        \n                                                                    PushService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertCtrl\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        init()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/services/startup.service.ts:37\n                            \n                        \n\n\n                \n                    \n                            Main application initialization routine. Called on angular app root component loaded\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            initTranslation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initTranslation()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/services/startup.service.ts:89\n                            \n                        \n\n\n                \n                    \n                            Initialize tranlsations\n\n\n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    Fulfilled on translate config language is setted up\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loader:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/services/startup.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\nimport {Platform, AlertController, LoadingController} from 'ionic-angular';\nimport {StatusBar} from '@ionic-native/status-bar';\nimport {SplashScreen} from '@ionic-native/splash-screen';\nimport {Keyboard} from '@ionic-native/keyboard';\nimport {EventsService} from \"./events.service\";\nimport {HttpService} from \"./http.service\";\nimport {Config} from '../config.service';\nimport {PushService} from \"./push.service\";\nimport {iEvent} from '../interfaces/event.interface';\n\n/**\n * Startup service.\n */\n@Injectable()\nexport class StartupService {\n\n  loader;\n\n  constructor(private loading: LoadingController,\n              private statusBar: StatusBar,\n              private splashScreen: SplashScreen,\n              private keyboard: Keyboard,\n              private config: Config,\n              private platform: Platform,\n              private translate: TranslateService,\n              private events: EventsService,\n              private http: HttpService,\n              private push: PushService,\n              private alertCtrl: AlertController) {\n  }\n\n  /**\n   * Main application initialization routine. Called on angular app root component loaded\n   */\n  public init(): void {\n    // Set loader if it is not set before\n    if(!this.loader) {\n      this.loader = this.loading.create();\n      this.loader.present();\n    }\n    // Promise chain for app initialization - device ready, translation, FCM registration, events loaded from storage and device interface setup\n    this.platform.ready().then(() => {\n      this.http.listenOnlineOffline();\n      return this.initTranslation();\n    }).then(() => {\n      if( !this.http.isOnline ) { throw Error('NO_CONNECTION'); }\n      this.push.init();\n      return this.push.register();\n    }).then((token: string) => {\n      if(!token) { throw Error('NO_TOKEN'); }\n      console.log('token', token);\n      localStorage.setItem(this.config.STORAGE_FCM_TOKEN_KEY, token);\n      return this.events.init();\n    }).then( (data: Array) => {\n      console.log('events', data);\n      if (window['cordova']) {\n        this.statusBar.styleLightContent();\n        this.splashScreen.hide();\n        this.keyboard.disableScroll(true);\n      }\n      this.loader.dismiss();\n    }).catch(error => {\n      // Display prompt if some in chain goes wrong to recursion retry\n      const translateSubscription = this.translate.get(['error', 'retry', 'NO_CONNECTION', 'NO_TOKEN']).subscribe(t => {\n        const prompt = this.alertCtrl.create({\n          title: t.error,\n          message: t[error.message],\n          buttons: [\n            {\n              text: t.retry,\n              handler: () => {\n                this.init();\n                translateSubscription.unsubscribe();\n              }\n            }\n          ]\n        });\n        prompt.present();\n      });\n    });\n  }\n\n  /**\n   * Initialize tranlsations\n   * @returns {Promise} Fulfilled on translate config language is setted up\n   */\n  public initTranslation(): Promise {\n    this.translate.addLangs(this.config.LANGUAGES);\n    this.translate.setDefaultLang(this.config.DEFAULT_LANGUAGE);\n    return this.translate.use(this.config.DEFAULT_LANGUAGE).toPromise();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabsPage.html":{"url":"components/TabsPage.html","title":"component - TabsPage","body":"\n                   \n\n\n\n\n\n  Components\n  TabsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/pages/tabs/tabs.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                tabs.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _subscriptions\n                            \n                            \n                                activeEvents\n                            \n                            \n                                prompt\n                            \n                            \n                                tab1Root\n                            \n                            \n                                tab2Root\n                            \n                            \n                                tab3Root\n                            \n                            \n                                tabRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                checkActive\n                            \n                            \n                                ionViewWillEnter\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alertCtrl: AlertController, eventService: EventsService, translate: TranslateService, config: Config, push: PushService, cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/pages/tabs/tabs.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alertCtrl\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventService\n                                                  \n                                                        \n                                                                    EventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    Config\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        push\n                                                  \n                                                        \n                                                                    PushService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            checkActive\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        checkActive(datestamp: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/tabs/tabs.ts:51\n                            \n                        \n\n\n                \n                    \n                            Check function for filter outdated events\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        datestamp\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ionViewWillEnter\n                            \n                            \n                        \n                    \n                \n                \n                    \nionViewWillEnter()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/tabs/tabs.ts:104\n                            \n                        \n\n\n                \n                    \n                            Update active events counter on every component open\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/tabs/tabs.ts:109\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/tabs/tabs.ts:58\n                            \n                        \n\n\n                \n                    \n                            Refresh outdated filter interval call and push subscription for open push event with prompt\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _subscriptions:     ISubscription[]\n\n                    \n                \n                    \n                        \n                            Type :     ISubscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/tabs/tabs.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activeEvents\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeEvents:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/tabs/tabs.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            prompt\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        prompt:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/pages/tabs/tabs.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tab1Root\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tab1Root:     \n\n                    \n                \n                    \n                        \n                            Default value : AddScreen\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/tabs/tabs.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tab2Root\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tab2Root:     \n\n                    \n                \n                    \n                        \n                            Default value : ListScreen\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/tabs/tabs.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tab3Root\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tab3Root:     \n\n                    \n                \n                    \n                        \n                            Default value : CalendarScreen\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/tabs/tabs.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tabRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tabRef:     Tabs\n\n                    \n                \n                    \n                        \n                            Type :     Tabs\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('navTabs')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/pages/tabs/tabs.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, ViewChild, OnInit, OnDestroy, ChangeDetectorRef} from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\nimport {AlertController, Tabs} from 'ionic-angular';\nimport {ISubscription} from 'rxjs/Subscription';\nimport {EventsService} from \"../../services/events.service\";\nimport {PushService} from \"../../services/push.service\";\nimport {AddScreen} from '../add/add';\nimport {ListScreen} from '../list/list';\nimport {CalendarScreen} from '../calendar/calendar';\nimport {Config} from '../../config.service';\n\n@Component({\n  templateUrl: 'tabs.html'\n})\nexport class TabsPage implements OnInit, OnDestroy {\n\n  @ViewChild('navTabs') tabRef: Tabs;\n\n  tab1Root = AddScreen;\n  tab2Root = ListScreen;\n  tab3Root = CalendarScreen;\n\n  // Active events counter for tab badge\n  activeEvents = 0;\n  prompt;\n\n  // Array for subscriptions\n  private _subscriptions: ISubscription[] = [];\n\n  constructor(\n    private alertCtrl: AlertController,\n    private eventService: EventsService,\n    private translate: TranslateService,\n    private config: Config,\n    private push: PushService,\n    private cd: ChangeDetectorRef\n  ) {\n    // Subscribe for update active events counter\n    const eventsSub = this.eventService.onEventsChange.subscribe((evts) => {\n      this.activeEvents = evts.filter( (e) => TabsPage.checkActive(e.datestamp)).length;\n      this.cd.detectChanges();\n    });\n    this._subscriptions.push(eventsSub);\n  }\n\n  /**\n   * Check function for filter outdated events\n   * @param {string} datestamp\n   * @returns {boolean}\n   */\n  private static checkActive(datestamp: string) {\n    return parseInt(datestamp) > new Date().setSeconds(0,0)\n  }\n\n  /**\n   * Refresh outdated filter interval call and push subscription for open push event with prompt\n   */\n  ngOnInit() {\n    //Interval setup for refresh outdated events filter with actual datestamp\n    setInterval(() => {\n      this.activeEvents = this.eventService.get().filter( (e) => TabsPage.checkActive(e.datestamp)).length;\n      this.cd.detectChanges();\n    }, this.config.INTERVAL);\n\n\n    // Subscribe for incoming push additional data to ask and open event from push\n    const pushSub = this.push.onPush.subscribe((data) => {\n      if (data.additionalData && data.additionalData.url && !this.prompt) {\n        const translateSubscription = this.translate.get(['close', 'more']).subscribe(t => {\n          this.prompt = this.alertCtrl.create({\n            title: data.title,\n            message: data.message,\n            buttons: [\n              {\n                text: t.close,\n                handler: () => {\n                  translateSubscription.unsubscribe();\n                  this.prompt = null;\n                }\n              },\n              {\n                text: t.more,\n                handler: () => {\n                  // Select tab call to emit event screen open function from list component after promise fulfilled\n                  this.tabRef.select(1).then( _ => {\n                    this.eventService.onEventsPushed.emit(data.additionalData.url);\n                    this.prompt = null;\n                  });\n                  translateSubscription.unsubscribe();\n                }\n              }\n            ]\n          });\n          this.prompt.present();\n        });\n      }\n    });\n    this._subscriptions.push(pushSub);\n  }\n\n  /**\n   * Update active events counter on every component open\n   */\n  ionViewWillEnter() {\n    this.activeEvents = this.eventService.get().filter( (e) => TabsPage.checkActive(e.datestamp)).length;\n    this.cd.detectChanges();\n  }\n\n  ngOnDestroy() {\n    // Unsubscribe from all subscriptions\n    this._subscriptions.map(subscription => subscription.unsubscribe());\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      '\n    var COMPONENTS = [{'name': 'AddScreen', 'selector': 'add'},{'name': 'CalendarScreen', 'selector': 'calendar'},{'name': 'EventScreen', 'selector': 'event'},{'name': 'HeaderComponent', 'selector': 'header-component'},{'name': 'ListScreen', 'selector': 'list'},{'name': 'NevillsApp', 'selector': ''},{'name': 'TabsPage', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TabsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                NevillsApp\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            \n                function\n            \n            \n                createTranslateLoader\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/components/header/header.ts\n            \n            \n                component\n            \n            \n                HeaderComponent\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/config.service.ts\n            \n            \n                injectable\n            \n            \n                Config\n            \n            \n                7 %\n                (1/14)\n            \n        \n        \n            \n                \n                src/interfaces/event.interface.ts\n            \n            \n                interface\n            \n            \n                iEvent\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/interfaces/event.interface.ts\n            \n            \n                interface\n            \n            \n                iTodo\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/interfaces/event.interface.ts\n            \n            \n                variable\n            \n            \n                emptyTodo\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/jestGlobalMocks.ts\n            \n            \n                variable\n            \n            \n                mock\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/pages/add/add.ts\n            \n            \n                component\n            \n            \n                AddScreen\n            \n            \n                53 %\n                (7/13)\n            \n        \n        \n            \n                \n                src/pages/calendar/calendar.ts\n            \n            \n                component\n            \n            \n                CalendarScreen\n            \n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                src/pages/event/event.ts\n            \n            \n                component\n            \n            \n                EventScreen\n            \n            \n                52 %\n                (10/19)\n            \n        \n        \n            \n                \n                src/pages/list/list.ts\n            \n            \n                component\n            \n            \n                ListScreen\n            \n            \n                25 %\n                (3/12)\n            \n        \n        \n            \n                \n                src/pages/tabs/tabs.ts\n            \n            \n                component\n            \n            \n                TabsPage\n            \n            \n                23 %\n                (3/13)\n            \n        \n        \n            \n                \n                src/pipes/outdated.ts\n            \n            \n                pipe\n            \n            \n                OutdatedPipe\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/events.service.ts\n            \n            \n                injectable\n            \n            \n                EventsService\n            \n            \n                50 %\n                (6/12)\n            \n        \n        \n            \n                \n                src/services/http.service.ts\n            \n            \n                injectable\n            \n            \n                HttpService\n            \n            \n                72 %\n                (13/18)\n            \n        \n        \n            \n                \n                src/services/http.service.ts\n            \n            \n                variable\n            \n            \n                CACHE\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/push.service.ts\n            \n            \n                injectable\n            \n            \n                PushService\n            \n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                src/services/startup.service.ts\n            \n            \n                injectable\n            \n            \n                StartupService\n            \n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/validators/time.validator.ts\n            \n            \n                function\n            \n            \n                timeValidator\n            \n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 5.2.11\n        \n            @angular/common : 5.2.11\n        \n            @angular/compiler : 5.2.11\n        \n            @angular/compiler-cli : 5.2.11\n        \n            @angular/core : 5.2.11\n        \n            @angular/forms : 5.2.11\n        \n            @angular/http : 5.2.11\n        \n            @angular/platform-browser : 5.2.11\n        \n            @angular/platform-browser-dynamic : 5.2.11\n        \n            @ionic-native/autostart : ~4.9.2\n        \n            @ionic-native/camera : ~4.9.2\n        \n            @ionic-native/core : ~4.9.2\n        \n            @ionic-native/fcm : ~4.9.2\n        \n            @ionic-native/file : ~4.9.2\n        \n            @ionic-native/keyboard : ~4.9.2\n        \n            @ionic-native/splash-screen : ~4.9.2\n        \n            @ionic-native/status-bar : ~4.9.2\n        \n            @ionic/pro : 1.0.20\n        \n            @ionic/storage : 2.1.3\n        \n            @ngx-translate/core : 9.1.1\n        \n            @ngx-translate/http-loader : 2.0.0\n        \n            cordova-android : 6.3.0\n        \n            cordova-plugin-autostart : ^2.3.0\n        \n            cordova-plugin-camera : ^4.0.3\n        \n            cordova-plugin-device : ^2.0.2\n        \n            cordova-plugin-file : ^6.0.1\n        \n            cordova-plugin-ionic-keyboard : ^2.0.5\n        \n            cordova-plugin-ionic-webview : ^1.1.19\n        \n            cordova-plugin-splashscreen : ^5.0.2\n        \n            cordova-plugin-statusbar : ^2.4.2\n        \n            cordova-plugin-whitelist : ^1.3.3\n        \n            cordova-support-google-services : ^1.2.1\n        \n            fullcalendar : 3.6.1\n        \n            ionic-angular : 3.9.2\n        \n            ionicons : 3.0.0\n        \n            ng-fullcalendar : 1.6.1\n        \n            phonegap-plugin-push : ^2.2.3\n        \n            rxjs : 5.5.11\n        \n            sw-toolbox : 3.6.0\n        \n            zone.js : 0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createTranslateLoader   (src/.../app.module.ts)\n                        \n                        \n                            timeValidator   (src/.../time.validator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createTranslateLoader\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateTranslateLoader(http)\n                    \n                \n\n\n\n\n                \n                    \n                            Translation setup\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/validators/time.validator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            timeValidator\n                            \n                            \n                        \n                    \n                \n                \n                    \ntimeValidator(dateFieldKey)\n                    \n                \n\n\n\n\n                \n                    \n                            Custom reactive form validator for time field to disable outdated event saving\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dateFieldKey\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Filed key in event form for date field to get full event date\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/iEvent.html":{"url":"interfaces/iEvent.html","title":"interface - iEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  iEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/event.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        datestamp\n                                \n                                \n                                        description\n                                \n                                \n                                        id\n                                \n                                \n                                        list\n                                \n                                \n                                        photo\n                                \n                                \n                                        sound\n                                \n                                \n                                        start\n                                \n                                \n                                        time\n                                \n                                \n                                        title\n                                \n                                \n                                        token\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        datestamp\n                                    \n                                \n                                \n                                    \n                                        datestamp:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        list\n                                    \n                                \n                                \n                                    \n                                        list:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photo\n                                    \n                                \n                                \n                                    \n                                        photo:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sound\n                                    \n                                \n                                \n                                    \n                                        sound:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start\n                                    \n                                \n                                \n                                    \n                                        start:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                    \n                                \n                                \n                                    \n                                        time:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface iTodo {\n  checked: boolean;\n  description: string;\n}\n\n// Event data structure\nexport interface iEvent {\n  id: string;\n  title: string;\n  description: string;\n  start: string;\n  time: string;\n  datestamp: string;\n  photo: string;\n  sound: string;\n  token: string;\n  list: Array\n}\n\n// Dummy item for dynamic list extend\nexport const emptyTodo = {\n  description: '',\n  checked: false\n};\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/iTodo.html":{"url":"interfaces/iTodo.html","title":"interface - iTodo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  iTodo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/event.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        checked\n                                \n                                \n                                        description\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        checked\n                                    \n                                \n                                \n                                    \n                                        checked:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface iTodo {\n  checked: boolean;\n  description: string;\n}\n\n// Event data structure\nexport interface iEvent {\n  id: string;\n  title: string;\n  description: string;\n  start: string;\n  time: string;\n  datestamp: string;\n  photo: string;\n  sound: string;\n  token: string;\n  list: Array\n}\n\n// Dummy item for dynamic list extend\nexport const emptyTodo = {\n  description: '',\n  checked: false\n};\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAddScreen\n\nAddScreen\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddScreen->AppModule\n\n\n\n\n\nCalendarScreen\n\nCalendarScreen\n\nAppModule -->\n\nCalendarScreen->AppModule\n\n\n\n\n\nEventScreen\n\nEventScreen\n\nAppModule -->\n\nEventScreen->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nListScreen\n\nListScreen\n\nAppModule -->\n\nListScreen->AppModule\n\n\n\n\n\nNevillsApp\n\nNevillsApp\n\nAppModule -->\n\nNevillsApp->AppModule\n\n\n\n\n\nOutdatedPipe\n\nOutdatedPipe\n\nAppModule -->\n\nOutdatedPipe->AppModule\n\n\n\n\n\nTabsPage\n\nTabsPage\n\nAppModule -->\n\nTabsPage->AppModule\n\n\n\n\n\nIonicApp \n\nIonicApp \n\nIonicApp  -->\n\nAppModule->IonicApp \n\n\n\n\n\nConfig\n\nConfig\n\nAppModule -->\n\nConfig->AppModule\n\n\n\n\n\nEventsService\n\nEventsService\n\nAppModule -->\n\nEventsService->AppModule\n\n\n\n\n\nHttpService\n\nHttpService\n\nAppModule -->\n\nHttpService->AppModule\n\n\n\n\n\nPushService\n\nPushService\n\nAppModule -->\n\nPushService->AppModule\n\n\n\n\n\nStartupService\n\nStartupService\n\nAppModule -->\n\nStartupService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CACHE   (src/.../http.service.ts)\n                        \n                        \n                            emptyTodo   (src/.../event.interface.ts)\n                        \n                        \n                            mock   (src/.../jestGlobalMocks.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/services/http.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CACHE\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        CACHE:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n\n\n            \n        \n\n    src/interfaces/event.interface.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            emptyTodo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        emptyTodo:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  description: '',\n  checked: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/jestGlobalMocks.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            mock\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mock:     \n\n                    \n                \n                    \n                        \n                            Default value : () => {\n  let storage = {};\n  return {\n    getItem: key => key in storage ? storage[key] : null,\n    setItem: (key, value) => storage[key] = value || '',\n    removeItem: key => delete storage[key],\n    clear: () => storage = {},\n  };\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
